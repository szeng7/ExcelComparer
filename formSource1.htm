

<SCRIPT LANGUAGE="JavaScript">
<!-- hide script from old browsers

// stdMsg is displayed for all invalid fields
var stdMsg = "You Should Confirm This Entry Before Submitting This Form!"

// mode and debugging flags
var flgDebug    = 0
var blankOK     = 1  // If blankOK=1, not an error to have an empty field
var flgGlobal   = 0  // Set by the "global" validate routine, don't popup alert boxes
var GlobalMsg   = ""
var PassNumber  = 1
var jsDQ        = '"'
var resetFlag   = false // set before call to dsForm.reset() in dsSubmit()
var NoDebug     = 0
var inLoseFocus = false // flag used by dsLoseFocus to prevent multiple DDE checks
var trapchecks  = 0

// some regular expression constants
var regInteger = "^-?\\d*$"
var regFloat   = "^-?\\d*\.?\\d*$"

// some date constants
var monthStr = "JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC"
var monthDays= "31,28,31,30,31,30,31,31,30,31,30,31"
var monthArr = monthStr.split(",")
var badDate  = new Date(1900,0,0)
var yearCutoff = 21

// some constants and vars for error checking prior to submission
var errMax  = 20
var errCnt  = 0
var errs    = ""
var warnMax = 20
var warnCnt = 0
var warnings= ""

var overrideErrs     = 0

// set default function to display status in lower-right corner
var dsStatusFxn = defStatusFxn

// global var to store last clicked radio button
var lastRadioClicked = null

//------------------------------------------------------------------------
function dbg(S) { if (NoDebug != 1) { alert(S) } }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function ff(name) { return document.getElementById(name) }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function initErrs() {
   errCnt   = 0
   errs     = ""
   warnCnt  = 0
   warnings = ""
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AddErr(Msg) {
   if (overrideErrs==1) { AddWarn(Msg); return }
   errCnt = errCnt+1
   if (errCnt>=errMax) {
      if (errCnt==errMax) {
         errs = errs+"Too Many Errors...Not Reporting Remaining Error Messages...\n"
         }
      }
   else {
      errs = errs+Msg+"\n"
      }
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AddWarn(Msg) {
   warnCnt = warnCnt+1
   if (warnCnt>=warnMax) { if (warnCnt==warnMax) { warnings = warnings+"Too Many Warnings...Not Reporting Remaining Warning Messages...\n" } }
     else { warnings = warnings+Msg+"\n" }
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function checkWarnings() {
   if (AllowMissing==1) { 
     var cntMissing=countMissingItems()
     if (cntMissing>0) { AddWarn(cntMissing+" item(s) marked as MISSING -- confirm this is correct!") }
     }
   if (warnCnt>0) {
      if (warnCnt==1) {
         warnings = "Possible Problem!  " + warnCnt + " Warning Message!\n\n"+warnings
         }
      else {
         warnings = "Possible Problem!  " + warnCnt +" Warning Messages!\n\n"+warnings
         }
      warnings = warnings + "\n\n"+"Submit This Form, Ignoring Possible Problem(s)?"
      return confirm(warnings)
      }   
   return true
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function checkErrs() {
   if (errCnt>0) {
      if (errCnt==1) {
         errs = "Form cannot be submitted - " + errCnt + " error found!\n\n"+errs
         }
      else {
         errs = "Form cannot be submitted - " + errCnt +" errors found!\n\n"+errs
         }
      errs = errs + "\n"+"Please correct errors and re-submit!"
      alert(errs)
      return false
      }   
   return checkWarnings()
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function countMissingItems() {
   var ret=0
   var dsForm=document.getElementById(dsFormName)
   for (var i=0; i<dsForm.length; i++) { 
      var f=dsForm.elements[i]
      if (radioField(f)) { 
         if (f.length==null) { rg=document.getElementsByName(f.name) } else { rg=f }
         if (f==rg[1]) { if (IsMissing(f)) { ret += 1 } }
         }
      else { if (IsMissing(dsForm.elements[i])) { ret+=1 } }
      }
   return ret
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function getFirstCheckboxField(Name) {
  // find first checkbox field with chkgrp=Name
  var frm=document.getElementById(dsFormName)
  for (var i=0; i<frm.elements.length; i++) {
    if (frm.elements[i].chkgrp) {
      if (frm.elements[i].chkgrp.toUpperCase()==Name.toUpperCase()) { return frm.elements[i] }
      }
    }
  return null
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function IsFieldBlank(f) {
  var IsBlank=0
  var fType=fldType(f).toUpperCase()
  if (fType=="RADIO") {
    if (radioVal(f)==-1) { IsBlank=1 }
    }
  else if (fType=="CHECKBOX") {
    if (f.chkgrp) {
      var checked=0
      var frm=f.form
      for (var i=0; i<frm.elements.length; i++) {
        if (frm.elements[i].chkgrp) {
          if (frm.elements[i].chkgrp==f.chkgrp) {
            if (checkboxVal(frm.elements[i])=="Y") { checked=checked+1 }
            }
          }
        }
      if (checked==0) { IsBlank=1 }
      }
    else {
      if (checkboxVal(f)=="N") { IsBlank=1 }
      }
    }
  else if ((fType=="SELECT") && (f.dsBlank)) {
    if ((f.dsBlank==1) && (f.selectedIndex==0)) { IsBlank=1 }
    }
  else {
    if (trim(f.value)=="") { IsBlank=1 }
    }
  if (AllowMissing==1) { if (IsBlank==1) { if (IsMissing(f)) { IsBlank=0 } } }
  if (IsBlank==1) { return true } else { return false }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function IsFieldNotBlank(f) {
  var blank=IsFieldBlank(f)
  return !blank
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function IsFieldBlankNotMissing(f) {
  var svMissing=AllowMissing
  AllowMissing=0
  var svResult=IsFieldBlank(f)
  AllowMissing=svMissing
  return svResult
  }
//------------------------------------------------------------------------


//------------------------------------------------------------------------
function checkBlank(mode,f,msg) {
  if (IsFieldBlank(f)) { 
    if (mode.toUpperCase()=="W") { AddWarn(msg) } else { AddErr(msg) }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function checkNotBlank(mode,f,msg) {
  if (IsFieldNotBlank(f)) { 
    if (mode.toUpperCase()=="W") { AddWarn(msg) } else { AddErr(msg) }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function FlagBlankFields(mode,fldnames) {
  var flds = fldnames.split(";")
  for (var i=0; i<flds.length; i++) {
    f=document.getElementById(flds[i])
    if (!(f)) { f=getFirstCheckboxField(flds[i]) }
    if (!(f)) { return }
    checkBlank(mode,f,"No response to item "+f.dsID2+".")
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function SkipPattern(mode,skipq,fldnames) {
  // check for skip pattern violations
  var flds = fldnames.split(";")
  for (var i=0; i<flds.length; i++) {
    f=document.getElementById(flds[i])
    if (!(f)) { f=getFirstCheckboxField(flds[i]) }
    if (!(f)) { return }
    var msg="Skip pattern violation"
    if (skipq!="") { msg+=", item "+skipq }
    msg+=" (item "+f.dsID2+" not blank)."
    checkNotBlank(mode,f,msg)
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AllBlank(fldnames) {
  // check whether all specified fields are blank or not
  var flds = fldnames.split(";")
  for (var i=0; i<flds.length; i++) {
    f=document.getElementById(flds[i])
    if (!(f)) { f=getFirstCheckboxField(flds[i]) }
    if (!(f)) { return true }
    if (IsFieldNotBlank(f)) { return false }
    }
  return true
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function idxLet(i,baseLet) {
   return String.fromCharCode(baseLet.charCodeAt()+i-1)
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function checkboxBlank(q,num) {
   for (var i=1; i<=num; i++) { if (document.getElementById(q+"_"+idxLet(i,"a")).checked==true) { return false } }
   return true
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function doMarkMissing(f,show) {
  if (show==true) {
    f.dsMissing=1 
    f.saveBGmiss=f.style.backgroundColor
    f.style.backgroundColor=MissingColor
    }
  else { 
    f.dsMissing=0
    f.style.backgroundColor=f.saveBGmiss
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function countRowMissing(form,row) {
  // count number of missing items in form row
  var cnt=0
  if (!row) { return 0 }
  for (var i=1; i<=form.length; i++) { if (form.elements[i-1].dsRow) { if (form.elements[i-1].dsRow==row) { if (IsMissing(form.elements[i-1])) { return 1 } } } }
  return 0
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function markMissing(f,show) { 
  var imgName="err"+f.name
  if (radioField(f)) { //radio fields
    if (f.length==null) { rg=document.getElementsByName(f.name) } else { rg=f }
    for (var i=1; i<=rg.length; i++) { doMarkMissing(rg[i-1],show) } 
    }
  else if (f.chkgrp) { //checkbox group fields
    var frm=f.form
    for (var i=0; i<frm.elements.length; i++) {
      if (frm.elements[i].chkgrp) {
        if (frm.elements[i].chkgrp==f.chkgrp) { doMarkMissing(frm.elements[i],show) }
        }
      }
    imgName="err"+f.chkgrp
    } 
  // all other fields
  else { doMarkMissing(f,show) }

  if (show==true) { if (document.images[imgName]) { document.images[imgName].src=missImg } }
    else { if (countRowMissing(f.form,f.dsRow)==0) { if (document.images[imgName]) { document.images[imgName].src=goodImg } } }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function IsMissing(f) {
  var fld=f
  if (radioField(fld)) { if (!fld.type) { fld=fld[0] } }
  if (fld.dsMissing) { if (fld.dsMissing==1) { return true } }
  return false
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function MarkAllMissing(form) {
  for (var i=1; i<=form.length; i++) { 
    var f=form.elements[i-1]
    if (IsMissing(f)) { 
      f.style.backgroundColor=f.saveBGmiss  // set background color so it will be saved properly
      markMissing(f,true) 
      if (f.pass1value!="") {
        var s=""+f.onchange
        if (s.indexOf("dateValidate")>0) { f.value=f.pass1value }
        }
      }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function parseLine(s) {
// return the first line of S, parsing on either "/n" or "<br>"
   var t1=""
   var t2=s.toUpperCase()
   for (var i=0; i<s.length; i++) {
      if ((t2.substr(i,2)=="/N") || (t2.substr(i,4)=="<BR>")) {
         return t1
         }
      else {
         t1=t1+s.substr(i,1)
         }
      }
   return t1
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function dsDateStringToDate(S) {
// return the JavaScript # of milliseconds form of the date in S

   var D=badDate


   if ( ((S.charAt(2)=="/")||(S.charAt(2)=="-")) && ((S.charAt(5)=="/")||(S.charAt(5)=="-")) ) { // date in format mm/dd/yyyy or mm/dd/yy
      if (DateFormat==3) {
         dy=parseInt(S.substr(0,2),10)
         m =parseInt(S.substr(3,2),10)-1
         }
      else {
         m =parseInt(S.substr(0,2),10)-1
         dy=parseInt(S.substr(3,2),10)
         }
      if (S.length==10) { y=parseInt(S.substr(6,4),10) } else { y=parseInt(S.substr(6,2),10) }
      }

   else { // date in format ddnnnyy or ddnnnyyyy 
   
      // remove spaces, dashes, and slashes, and exit if invalid character
      var T=""
      var ch=""
      for (var j=1; j<=S.length; j++) {
         ch=S.charAt(j-1)
         if ((ch==" ") || (ch=="/") || (ch=="-")) { }
         else {
            ch=ch.toUpperCase()
            if ((ch>="A" && ch<="Z") || (ch>="0" && ch<="9")) {
               T=T+ch
               }
            else {
               return D
               }
            }
         }

      var i=1
      // get first portion, days
      var dy=""
      while ((i<T.length) && (T.charAt(i-1)>="0") && (T.charAt(i-1)<="9")) {
         dy=dy+T.charAt(i-1)
         i=i+1
         }
      dy=trim(dy)
      
      // get next portion, month
      var mn=""
      while ((i<T.length) && (T.charAt(i-1)>="A") && (T.charAt(i-1)<="Z")) {
         mn=mn+T.charAt(i-1)
         i=i+1
         }
      mn=trim(mn)

      // get last portion, year
      var yr=""
      while ((i<=T.length) && (T.charAt(i-1)>="0") && (T.charAt(i-1)<="9")) {
         yr=yr+T.charAt(i-1)
         i=i+1
         }
      yr=trim(yr)
      var y=parseInt(yr,10)

      m=-1
      for (i=0; i<monthArr.length; i++) {
         if (mn==monthArr[i]) {
            m=i
            }
         }
      if (m==-1) { return badDate }
      }

   // alert("dsDateStringToDate\nS="+S+"\ndy="+dy+"\nm="+m+"\ny="+y)

   if ( (dy<1) || (dy>31) ) { return badDate }
   if ( (m<0)  || (m>11)  ) { return badDate }
   if (y<100) { if (y<yearCutoff) { y=y+2000 } else { y=y+1900 } }

   // check whether the number of days is possible for the selected month
   var monthDays= "31,28,31,30,31,30,31,31,30,31,30,31"
   var DaysArr = monthDays.split(",")
   if ((m==1) && (dy==29)) {
     // special handling for February, must check for leap year
     leap=false
     if ((y % 4)==0) { leap=true }
     if ((y % 100)==0) {
       if ((y % 400)!=0) { leap=false }
       }
     if (leap) { DaysArr[1]=29 }
     }
   if (dy>DaysArr[m]) { return badDate }
      
   D=new Date(y,m,dy)
   // alert("S: "+S+"\nT: "+T+"\ndy: "+dy+"\nmn: "+mn+"  (m="+m+")\nyr: "+yr+"  (y="+y+")\nD: "+D)
   return D 
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function DateDiff(Interval,Date1,Date2) {
  // return Date1-Date2 measured in units specified; return -999 if error
  //    Interval="yyyy", return in full years (eg. to calculate age)
  //    Interval="m", return in full months

  var mode=""
  var res=0
  var swap=false

  if (Interval.toUpperCase()=="YYYY") { mode="Y" }
  if (Interval.toUpperCase()=="M") { mode="M" }
  if ((mode=="") || (Date1==badDate) || (Date2==badDate)) { return -999 }
  if (Date1==Date2) { return 0 }
  var D1=Date1
  var D2=Date2
  if (Date1<Date2) { swap=true; D1=Date2; D2=Date1 }

  if (mode=="Y") {
    res=D1.getFullYear()-D2.getFullYear()
    if (D1.getMonth()<D2.getMonth()) { res=res-1 }
    if (D1.getMonth()==D2.getMonth() && D1.getDate()<D2.getDate()) { res=res-1 }
    }
  if (mode=="M") {
    res=12*(D1.getFullYear()-D2.getFullYear())
    if ((res>0) && (D1.getMonth()<D2.getMonth())) { res=res-12 }
    res=res+D1.getMonth()-D2.getMonth()
    if (D1.getMonth()<D2.getMonth()) { res=res+12 }
    if (D1.getDate()<D2.getDate()) { res=res-1 }
    }
  if (swap) { return -res } else { return res }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function CheckDates(D1Str,D2Str,Cond) {
  var ret=false
  var D1=dsDateStringToDate(D1Str)
  var D2=dsDateStringToDate(D2Str)
  var D1T=D1.getTime()+0
  var D2T=D2.getTime()+0
  if ((D1!=badDate) && (D2!=badDate)) {
    switch (Cond) {
      case '>' : if (D1T>D2T)  { ret=true }; break;
      case '>=': if (D1T>=D2T) { ret=true }; break;
      case '=' : if (D1T==D2T) { ret=true }; break;
      case '<' : if (D1T<D2T)  { ret=true }; break;
      case '<=': if (D1T<=D2T) { ret=true }; break;
      case '!=': if (D1T!=D2T) { ret=true }; break;
      case '<>': if (D1T!=D2T) { ret=true }; break;
      }
    }
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function SpecifyCheck(ItemRoot,OtherItem,SpecItem,OtherText) {
// var scstr="ItemRoot="+ItemRoot+"\nOtherItem="+OtherItem+"\nSpecItem="+SpecItem+"\nOtherText="+OtherText
// alert("SpecifyCheck\n\n"+scstr)
  if (checkboxField(document.getElementById(ItemRoot+OtherItem))) {
    if (checkboxVal(document.getElementById(ItemRoot+OtherItem))=="Y") {
      if (IsFieldBlank(document.getElementById(SpecItem))) { AddErr("No '"+OtherText+"' specified in item "+OtherItem+".") }
      }
    else {
      if (IsFieldNotBlank(document.getElementById(SpecItem))) { AddErr("'"+OtherText+"' specified in item "+OtherItem+" but '"+OtherText+"' not checked.") }
      }
    }
  else { 
    if (radioNum(document.getElementById(ItemRoot+OtherItem))==SpecItem) {
      if (IsFieldBlank(document.getElementById(ItemRoot+OtherItem+"s"))) { AddErr("No '"+OtherText+"' specified in item "+OtherItem+".") }
      }
    else {
      if (IsFieldNotBlank(document.getElementById(ItemRoot+OtherItem+"s"))) { AddErr("'"+OtherText+"' specified in item "+OtherItem+" but '"+OtherText+"' not selected.") }
      }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function spaceLen(S)
// return length of line in number of spaces, based on MS Sans Serif font
{
     var w = "32,1.00;33,0.75;34,1.25;35,2.00;36,2.00;37,3.00;38,2.25;39,0.75;40,1.25;41,1.25;"+
             "42,1.25;43,2.00;44,1.00;45,1.25;46,1.00;47,1.00;48,2.00;49,2.00;50,2.00;51,2.00;"+
             "52,2.00;53,2.00;54,2.00;55,2.00;56,2.00;57,2.00;58,1.00;59,1.00;60,2.00;61,2.00;"+
             "62,2.00;63,2.00;64,3.50;65,2.25;66,2.25;67,2.25;68,2.50;69,2.25;70,2.00;71,2.75;"+
             "72,2.50;73,0.75;74,1.75;75,2.25;76,2.00;77,2.75;78,2.50;79,2.75;80,2.25;81,2.75;"+
             "82,2.50;83,2.25;84,2.25;85,2.50;86,2.25;87,3.25;88,2.25;89,2.25;90,2.25;91,1.00;"+
             "92,1.00;93,1.00;94,1.75;95,2.00;96,1.25;97,2.00;98,2.00;99,1.75;100,2.00;101,2.00;"+
             "102,1.00;103,2.00;104,2.00;105,0.75;106,0.75;107,1.75;108,0.75;109,2.75;110,2.00;111,2.00;"+
             "112,2.00;113,2.00;114,1.25;115,1.75;116,1.00;117,2.00;118,1.75;119,2.25;120,1.50;121,1.75;"+
             "122,1.75;123,1.25;124,0.75;125,1.25;126,2.00"





   var tmpw = w.split(";")
   var widths = new Array()
   for (i=0; i<tmpw.length; i++) {
      var vals=tmpw[i].split(",")
      if (!isNaN(vals[0])) {
         widths[vals[0]]=vals[1]
         }
      }
   var sFirst = tmpw[0].split(",")[0]  
   var sLast  = tmpw[tmpw.length-1].split(",")[0]

   var slen=0
   for (var i=0; i<S.length; i++) {
      var ch=S.charCodeAt(i)
      if ((ch>=sFirst) && (ch<=sLast))
         { slen = slen+parseFloat(widths[ch]) } else { slen = slen+1.25 }
      }
//   alert("S="+S+"\nslen="+slen)
   return slen
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsCenter(S)
// center each line of S based on longest line
// each character in longest line is given 1.25 spaces
{
   var spcChar = " "
   var S2 = S.replace(/<br>/i,"\n")
   var lines = S2.split(/\r\n|\r|\n/)
   var max=0
   for (var l=0; l<lines.length; l++) {
      if (spaceLen(lines[l])>max) { max = spaceLen(lines[l]) }
      }
   for (var l=0; l<lines.length; l++) {
      var s = Math.floor((max-spaceLen(lines[l]))/2);
      var r = ''
      for (var i=0; i<s; i++) {
         r += spcChar
         }
      lines[l] = r+lines[l]+r
      if (spaceLen(lines[l])<max-1) { lines[l]=spcChar+lines[l] }
      }
   return lines.join('\n')
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsAlert(S)
// popup box with message "S"
{
   alert(dsCenter(S))
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function dsConfirm(S)
// popup confirm box with message "S"
{
   return confirm(dsCenter(S))
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function del(s,i,n)
// delete len characters from s starting with character at position i
{
   var t = ""
   if (i+n-1>s.length-1) {return s}
   for (var j=0; j<s.length; j++) {
      if (j<i || j>i+n-1) {t = t + s.charAt(j)}
      }
   return t
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function trimlead(s)
// delete leading spaces from s
{
   var t=s
   while (t.charAt(0) == " ") {t=del(t,0,1)}
   return t
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function trimtrail(s)
// delete trailing spaces from s
{ 
   var t=s
   while (t.charAt(t.length-1) == " ") {t=del(t,t.length-1,1)}
   return t
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function trim(s)
// remove all leading and trailing spaces from input string "s"
{
   var t=s
   t=trimlead(t)
   t=trimtrail(t)
   return t
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function fldComp(s)
// remove all spaces from s and return upper-case
{
   var t=s
   if (t.length>0) {
      while (t.indexOf(' ')>=0) { t=del(t,t.indexOf(' '),1) }
      }
   if (t.length>0) {return t.toUpperCase()} else {return ""}
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsRadioClick(r) 
// if radio button clicked twice in a row, uncheck it
{
   if (r==lastRadioClicked) { r.checked=false; lastRadioClicked=null } else { lastRadioClicked=r }
   }
//------------------------------------------------------------------------
    
//------------------------------------------------------------------------
function maskValid(input,mask)
// return whether the string in input matches the regular expression mask
{
//   dsAlert("inp="+input+"   mask="+mask)
   if (mask == '') {return true}
   if ((blankOK==1) && (trim(input)=="")) {return true}

   var re = new RegExp(mask,"i")

   var st = input
   if (re.test(st)) {
      if (flgDebug == 1) {dsAlert("TRUE!  str="+st+"  mask=^"+mask+"^") }
      return true
      } 
   if (flgDebug == 1) {dsAlert("FALSE!  str="+st+"  mask=^"+mask+"^") }
   return false
   }
//------------------------------------------------------------------------
    
//------------------------------------------------------------------------
function badfield(field)
// place image specified by ErrImg in the 2nd column next to the passed field
{
   var st = ""

   if ((field.badField!=1) && (field.style.color.toUpperCase()!=FancyFocusColor.toUpperCase())) {
      field.defColor=field.style.color
      }
   field.badField=1
   field.style.color=FieldErrColor
   field.style.fontWeight="bold"

   st = field.name
   if (st.indexOf("_Grd") != -1) {
      st = st.substring(0,st.indexOf("_Grd"))
      for (var i=0; i < gridCount; i++) {
         if (gridNames[i]==st) {
            gridCounts[i] = gridCounts[i]+1
            field.gridBad=1
            }
         }
      }
   st = "err"+st
   if (document.images[st]) { document.images[st].src = errImg }
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function goodfield(field)
// place image specified by goodImg in the 2nd column next to the passed field
{
   var st = ""
   if (field.badField==1) {
      field.badField=0
      field.style.color=field.defColor
      field.style.fontWeight="normal"
      }
      
   var showGood = 1
   st = field.name
   if (st.indexOf("_Grd") != -1) {
      st = st.substring(0,st.indexOf("_Grd"))
      showGood = 0
      for (var i=0; i < gridCount; i++) {
         if (gridNames[i]==st) {
            if (field.gridBad==1) {
               field.gridBad=0
               if (gridCounts[i] > 0) { gridCounts[i] = gridCounts[i]-1 }
               }
            if (gridCounts[i] == 0) { showGood = 1 }
            }
         }
      }
   st = "err"+st
   if (document.images[st]) { document.images[st].src = goodImg }
   }
//------------------------------------------------------------------------
function dsHideForm()
{
   if (NoHideForm!=1) { document.getElementById("dsFormTableStart").style.display="none" }
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsShowForm()
{
   document.getElementById("dsFormTableStart").style.display="inline"


   window.scrollTo(0,99999)
   setTimeout("window.scrollTo(0,0)",100)


   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsHideFormShowMessage(Msg)
{
   document.getElementById("dsStatusMessage").innerHTML=Msg
   dsHideForm()
   document.getElementById("dsStatusMessage").style.display="inline"
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsShowFormHideMessage()
{
   document.getElementById("dsStatusMessage").innerHTML=""
   dsShowForm()
   document.getElementById("dsStatusMessage").style.display="none"
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function clearErrImages(reset) {
  // clear all 'error' images in dsForm
  var l=document.images.length
  var img=""
  for (var i=0; i<l; i++) {
    img=document.images[i];
    if (img.name.substring(0,3)=="err") { img.src=goodImg }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsReset(form)
// called by clicking "Reset" button, or by dsSubmit after pass 1 in double-data-entry mode
// used to reset checkboxes to correct state for 2nd pass
{
   if (resetFlag!=true) {
      var vreset=dsConfirm("Clear All Fields, Losing All Entered Data?")
      if (vreset==true) { clearErrImages(true) }
      return vreset
      }
   else {
     clearErrImages(false)
     return true
     }
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function Validate(field,fldOK,msg)
// global function to handle good and bad fields
{

//   field.dsPass2OK=""
   if (fldOK == true) { 
      goodfield(field) 
      return true
      }
   badfield(field)
   if (flgGlobal == 1) {
      if (GlobalMsg == "") {GlobalMsg="WARNING!\n"}
      }
      else {dsAlert(msg+NewLine+stdMsg) }
   return false
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function strValidate(field,mask) 
// compare field.value against the picture mask in "mask" and confirm that the entered data conforms
// with the mask
{
   if (field.regException) { if (maskValid(field.value,field.regException)) { return true } }
   return Validate(field,maskValid(field.value,mask),"Warning!  Invalid Format!")
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function dateValidate(field,minDate,maxDate) 
// compare field.value against the picture mask in "mask" and confirm that the entered data conforms
// with the mask
{
   if (AllowMissing==1) { if (field.dsMissing==1) { return Validate(field,true,"") } }
   var st = trim(field.value)
   st = st.toUpperCase()
   if (maskValid(st,regDate) == false) { 
      if (field.regException) { if (maskValid(st,field.regException)) { return true } }
      return Validate(field,false,"Warning!  Invalid Date Format!") 
      }
   if (st=="") { return Validate(field,true,"") }
   var theD = dsDateStringToDate(st)
   var minD = dsDateStringToDate(minDate)
   var maxD = dsDateStringToDate(maxDate)
   // alert("d="+st+"\ntheD="+theD+"\nminDate="+minDate+"\nminD="+minD+"\nmaxDate="+maxDate+"\nmaxD="+maxD+"\nbadDate="+badDate)
   if ( (minD!=badDate) && (maxD!=badDate) && (minD<=maxD) ) {
      if ((theD<minD) || (theD>maxD)) { return Validate(field,false,"The Date Must Be Between "+minDate+" and "+maxDate+"!") }
      }
   if (theD==badDate) { return Validate(field,false,"Invalid Date Entered!") }
   field.value = st
   return Validate(field,true,"")
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function intValidate(field,min,max) 
// compare field.value against the picture mask in "mask" and confirm that the entered data conforms
// with the mask
{
   var st = trim(field.value)
   if (field.regException) { if (maskValid(st,field.regException)) { return true } }
   st=st.replace(/,/g,"")
   var i  = parseInt(st,10)
   if ((blankOK==1) && (st=="")) { return Validate(field,true,"") }
   if ((maskValid(st,regInteger) == false) || (isNaN(i))) { return Validate(field,false,"Warning!  Please Enter A Number!") }
   if ((i<min) || (i>max)) { return Validate(field,false,"Warning!  Expecting A Number Between "+min+" And "+max+"!") }
   field.value = st
   return Validate(field,true,"")
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function floatValidate(field,min,max)
// compare field.value against the picture mask in "mask" and confirm that the entered data conforms
// with the mask
{
   var st = trim(field.value)
   if (field.regException) { if (maskValid(st,field.regException)) { return true } }
   st=st.replace(/,/g,"")
   var f  = parseFloat(st,10)
   if ((blankOK==1) && (st=="")) { return Validate(field,true,"") }
   if ((maskValid(st,regFloat) == false) || (isNaN(f))) { return Validate(field,false,"Warning!  Please Enter A Number!") }
   if ((f<min) || (f>max)) { return Validate(field,false,"Warning!  Expecting A Number Between "+min+" And "+max+"!") }
   field.value = st
   return Validate(field,true,"")
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function dsHelp()
{
   dsAlert("Help!")
   return
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function defStatusFxn() {
  var ret=""
   if (EditMode==1) { ret += "<b>Form Edit</b>" } else { ret += "<b>Pass "+PassNumber+" of "+PassCount+"</b>" }
   if (overrideErrs==1) { ret +="<br><font color='orange'>Override On</font>" } else { ret +="<br>" }

  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsStatus(fld) {
// display 'msg' in the status bar
   if (fld) { 
      var msg=fld.dsInfo
      if (fld.dsID2!="") { msg=fld.dsID2+": "+msg }
      }
   else { msg=""; }
   window.status = msg

      if (parent.dsFrameInfo != null) {
         if (dsInfoSpanVar==null) {
            var st = "<html><head></head><body bgcolor="+StatusBGColor+" onunload='javascript:parent.frames['dsFrameMain'].dsInfoSpanVar=null'>\n"+
                     "<center><table width='99%' height='100%' border='0' cellspacing='0' cellpadding='2' style='vertical-align:middle'>\n"+
                     "<tr><td align=left valign=middle><font face='Arial' style='font-size:8pt;' color='white'><b>"+dsFormInfo+"</b></font></td>\n"+
                     "<td align=center valign=middle><font face='Arial' style='font-size:13pt;' color='yellow'><b><center><span id='dsInfoSpan'>"+msg+"</span></center></b></font></td>\n"+
                     "<td align=right valign=middle><table border='0' cellspacing='0' cellborder='0'><tr><td><button tabIndex='-1' name='btnToolbox' onMouseOver='this.style.borderColor=\"white\"' onMouseOut='this.style.borderColor=\"transparent\"' style='border-color:transparent; margin: 1px; padding: 0px; overflow:visible;' title='Enter notes, mark as missing, etc.' onClick='parent.frames['dsFrameMain'].ToolboxClick(parent.frames['dsFrameMain'].lastBlur)'><img src='Note.gif'></button>&nbsp;&nbsp;</td><td><span id='dsStatusSpan' style='font-face:arial;font-size:8pt;color:white;'>"+defStatusFxn()+"</span></td></tr></table></td>\n"+
                     "</tr></table></center>\n"
           parent.dsFrameInfo.document.write(st)
           parent.dsFrameInfo.document.close()
           dsInfoSpanVar=parent.dsFrameInfo.document.getElementbyId("dsInfoSpan")
           dsStatusSpanVar=parent.dsFrameInfo.document.getElementById("dsStatusSpan")
           }
         else { 
           dsInfoSpanVar.innerHTML=msg
           if (dsStatusFxn!=defStatusFxn) { dsStatusSpanVar.innerHTML=dsStatusFxn() }
           }
         }


   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function spc(n)
{
   var s=""
   for (var i=0; i<n; i++) { s += " " }
   return s
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function abortForm() {
  var url=""
  alert("It looks like you are having trouble with this form!\n\n"+
        "You have experienced a great many double-data-entry errors.  As a result, the system is going\n"+
        "to reload this form to start fresh.\n\n"+
        "We are sorry for any inconvenience.")
  formAborted=true  // just in case next line fails
  url=parent.window.location.href
  if (parent.window.location.search!="") { url=url+"&"} else {url=url+"?"}
  url=url+"FormAbort=TRUE"
  parent.window.location.href=url
  // parent.window.location.reload(true)  
  }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function dsDblConfirm(field)
// confirm selection for double-data-entry failure
{
   var p1 = getFieldValue(field,1)
   if (p1.length>25) { p1 = p1.substr(0,22)+" ..." }
   var p2 = getFieldValue(field,PassNumber)
   if (p2.length>25) { p2 = p2.substr(0,22)+" ..." }
   if (p1.length != p2.length) {
      if (p1.length>p2.length) { p2 += spc(Math.floor(1.25*(p1.length-p2.length))) }
      else { p1 += spc(Math.floor(1.25*(p2.length-p1.length))) }
      }
   // 13-apr-2010 replace "-1" with "[blank]" if radio field
   if (field.type=="radio") {
      if (p1=="-1") { p1="[blank]" }
      if (p2=="-1") { p2="[blank]" }
      }
   
   var S = "Double-Data-Entry Warning!"+NewLine+" "+NewLine
   var p3 = fldPrompt(field)
   if (p3.length>25) { p3 = p3.substr(0,22)+" ..." }
   S += "Item: "+field.dsID2+" ("+p3+")"+NewLine
   S += "You entered something different for this item than you did on pass 1."+NewLine+" "+NewLine
   S += "Pass 1: "+p1+NewLine
   S += "Pass 2: "+p2+NewLine+" "+NewLine
   S += "Press 'OK' to keep the value from pass 2"+NewLine
   S += "Press 'Cancel' to restore the value from pass 1"+NewLine
   var ret=dsConfirm(S)
   if (ret) { DDE=1 } else { DDE=2 }
   var fDDE=document.getElementById("dsDDE")
   if ((fDDE!=null) && (fDDE.value!="")) { fDDE.value+=";"}
   fDDE.value+=field.dsID2+","+DDE
   
   // check if max number of DDE errors has been exceeded (26Oct05)
   cntDDE+=1
   if ((!ret) && (trim(""+p2)=="")) { cntBlankDDE+=1 }
   if ((cntDDE>maxDDE) || (cntBlankDDE>maxBlankDDE)) { abortForm() }
   return ret
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function getFieldIndex(f)
{
   // return -1
   var theForm=f.form
   var i=svFieldFocus-2
   if (i<0) { i=0 }
   while (i!=lastFieldFocus-2) {
      if (f==theForm.elements[i]) { svFieldFocus=i; return i }
      i+=1
      if (i>theForm.elements.length-1) { i=0 }
      }
   return -1
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function dsGetFocus(field) {

// check if form has already been submitted   
   lastFieldFocus=getFieldIndex(field)
   if (document.getElementById(submitField)!=null) {
      if (document.getElementById(submitField).value==submitField) {
         dsHideFormShowMessage(dsNoBackMsg)
         }
      }
   if (FancyInputBox==1) {
      if (field.badField!=1) {
         if (field.style.color.toUpperCase()!=FancyFocusColor.toUpperCase()) {
            field.defColor=field.style.color
            }
         field.style.color=FancyFocusColor
         }
      }
   if (FancyInputBG==1) {
      var obj=document.getElementById("dsFormTable").rows[field.rows-1]
      field.saveBG=obj.bgColor
      obj.bgColor=FancyFocusBGColor
      }
   if (ScrollFlag==1) {
      var dh=document.body.clientHeight
      var st=document.body.scrollTop
      var r=document.getElementById("dsFormTable").rows[field.dsRow-1]
      var pTop=0
      var p=r
      while (p.offsetParent!=null) {
         p=p.offsetParent
         pTop=parseInt(pTop,10)+parseInt(p.offsetTop,10)
         }
      var top=parseInt(r.offsetTop,10)+parseInt(pTop,10)
      var bot=parseInt(top,10)+parseInt(r.offsetHeight,10)
      if (parseInt(st,10)+parseInt(dh,10)<parseInt(bot,10)) {
         var nt=parseInt(bot,10)-parseInt(dh,10)+5
         scrollTo(0,nt)
         }
      }
   dsStatus(field)
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function checkboxField(field) {
  if (trapchecks==1) {
    if (!confirm("checkboxField here, field="+field+"\nfield.name="+field.name)) { trapchecks=0 }
    }
   if (field.type.toUpperCase()=="checkbox".toUpperCase())
      {return true}
   else
      {return false}
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function checkboxVal(checkboxFld) {
   if (checkboxFld.checked==true) { return "Y" } else { return "N" }
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function radioField(field) {
   var rf
   if (field.type) { rf=field } else { rf=field[0] }
   if (!rf.type) { return false }
   if (rf.type.toUpperCase()=="radio".toUpperCase())
      { return true }
   else 
      { return false }
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function radioVal(radioFld) {
   var radioGrp
   if (radioFld.length==null) { radioGrp=document.getElementsByName(radioFld.name) } else { radioGrp=radioFld }
   for (var i=0; i<radioGrp.length; i++) {
      if (radioGrp[i].checked) { return radioGrp[i].value }
      }
   return -1
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function radioNum(radioFld) {
   var radioGrp
   if (radioFld.length==null) { radioGrp=document.getElementsByName(radioFld.name) } else { radioGrp=radioFld }
   for (var i=0; i<radioGrp.length; i++) {
      if (radioGrp[i].checked) { return i+1 }
      }
   return -1
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function fldType(field) {
   if (radioField(field))    {return "Radio"}
   if (checkboxField(field)) {return "Checkbox"}
   var ft=field.type.toUpperCase()
   if (ft.indexOf("SELECT-")>=0) { return "Select"}
   return field.type 
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function statusBar(cur,total) {
   var totalLen=40
   var s=" ["+cur+" / "+total+"] "
   var chars=Math.floor(totalLen*cur/total)
   if (cur>=total) { chars=totalLen }
   for (var i=0; i<=chars; i++) { s=s+">" }
   return s
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function getFieldValue(field,pass) {
   if (pass==1) {
      return field.pass1value
      }
   else {
      if (checkboxField(field)) { return checkboxVal(field) }
      else {
         if (radioField(field)) { return radioVal(field) }
         else { return field.value }
         }
      }
   }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function fldPrompt(field) {
   if (fldType(field)=="Radio") {
      return parseLine(field.dsPrompt)
      }
   else {
      return parseLine(field.dsPrompt)
      }
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsLoseFocus(field)
// called whenever a field loses focus, via the "onBlur" handler
{
   lastBlur=field
   dsStatus("")
   if (FancyInputBox==1) {
      if ((field.style.color.toUpperCase()==FancyFocusColor.toUpperCase()) && (field.badField!=1)) {
         field.style.color=field.defColor
         }
      }
   if (FancyInputBG==1) {
      var obj=document.getElementById("dsFormTable").rows[field.dsRow-1]
      obj.bgColor=field.saveBG
      }   
   if ( (PassNumber==PassCount) && (PassNumber>1) && (!inLoseFocus) && (!radioField(field)) ) {
      if ((fldComp(getFieldValue(field,1)) != fldComp(getFieldValue(field,PassNumber))) && (field.dsPass2OK != "OK")) {
         inLoseFocus=true
//         field.focus()
         if (dsDblConfirm(field)) {
            // Keep current (pass 2) value...
            if (radioField(field)) {
               var radioGrp=document.getElementsByName(field.name)
               for (var i=0; i<radioGrp.length; i++) {
                  radioGrp[i].dsPass2OK="OK"
                  }
               }
            else { field.dsPass2OK="OK" }
            }
         else {
            // Revert to previous (pass 1) value...
            if (radioField(field)) {
               var radioGrp=document.getElementsByName(field.name)
               for (var i=0; i<radioGrp.length; i++) {
                  if (radioGrp[i].value==field.pass1value) {
                     radioGrp[i].checked=true
                     }
                  }
               }
            else {
               if (checkboxField(field)) {
                  if (field.pass1value=="Y") { field.checked=true } else { field.checked=false }
                  }
               else {
                  field.value=field.pass1value
                  field.onchange()
                  }
               }
            }
         inLoseFocus=false
         }
      }
   }
//------------------------------------------------------------------------
  
//------------------------------------------------------------------------
function defaultFocus() { top.frames['dsFrameMain'].document.forms[0].elements[firstFieldIdx].focus() }
//------------------------------------------------------------------------
   
//------------------------------------------------------------------------
function loadMsg()
{
   var S="loadMsg!\n"+
         "top:"+top+"   name:"+top.name+"\n"+
         "self:"+self+"   self:"+self.name+"\n"
   if (top==self) {
      S=S+"top=self\n"
      }
   else {
      S=S+"top<>self\n"
      }
   dsAlert(S)
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsUnescape(s) 
{
   var t=s
   for (var i=0; i<t.length; i++) { if (t.charAt(i)=="+") { t=t.substr(0,i)+" "+t.substr(i+1) } }
   t=unescape(t)
   return t   
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function loadField(FldName,FldVal)
{
//   return 0
   if ( (FldName.toUpperCase()=="DSMISSING") && (AllowMissing==1) ) { loadMissing(FldVal); return }
   var f=document.getElementById(FldName)
   if (f!=null) {
      switch (fldType(f)) {
         case "Checkbox" :
            if (FldVal.toUpperCase()=="Y") {f.checked=true}
            break
         case "Radio" :
            var radioGrp=document.getElementsByName(f.name)
            for (var i=0; i<radioGrp.length; i++) {
               if (radioGrp[i].value==FldVal) { radioGrp[i].checked=true }
               }
            break
         default :
            f.value = dsUnescape(FldVal)
            break
         }
      }
   }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function dsKeyDown(e)
{
  // alert("dsKeyDown, ch="+String.fromCharCode(window.event.keyCode).toUpperCase())
  if (document.activeElement.type) { var s=document.activeElement.type.toUpperCase() } else { var s="" }
  if (window.event.keyCode==13) { 
    var OnButton=0
    if ((s=="BUTTON") || (s=="SUBMIT") || (s=="RESET")) { OnButton=1 }
    if (OnButton!=1) { window.event.keyCode=9 }
    }
  if (window.event.ctrlKey) {
    var kc=window.event.keyCode
    var ch=String.fromCharCode(kc)
    if (ch.toUpperCase()=="M") { ToolboxClick(document.activeElement); return false }
    if (typeof ctrlCommands == 'function') { ctrlCommands(ch.toUpperCase()) }  // check for special commands if running in 'CtrlMode'
    }
  else {
    var ch=String.fromCharCode(window.event.keyCode).toUpperCase()
    if (window.event.keyCode>=96 && window.event.keyCode<=105) { ch=String.fromCharCode(window.event.keyCode-48) }
    // if single-choice or multiple-choice, let numbers toggle responses for easier keyboard-only entry 05-Jan-2010 and updated 21-Jan-2010
    if (s=='RADIO') {
      var f=document.activeElement
      if (f.length==null) { var rg=document.getElementsByName(f.name) } else { var rg=f }
      for (i=0; i<rg.length; i++) { if (rg[i].value.toUpperCase()==ch) { rg[i].checked=true; rg[i].focus() } }
      }
    if (s=='CHECKBOX') {
      if (ch=='1' || ch=='Y') { document.activeElement.checked=true }
      if (ch=='0' || ch=='N') { document.activeElement.checked=false }
      }
    }
  }
//------------------------------------------------------------------------

function RestoreFocus(lFF) { if (lFF>0) { document.forms[dsFormName].elements[lFF].focus() } }


// end hiding -->
</SCRIPT>


<style>
#hWin          { position: absolute; left: 40%; top: 40%; visibility: hidden;
                 background: #ece9d8; color: #000000; border: 3px solid blue; border-top-width: 0px; z-index:100; }
.hWinHead      { background: #ffffff url(titlegrad.gif) repeat-x top left; height:33px; }
.hWinHeadImg   { border:0;position:absolute;text-align:right;top:2px;right:1px;}
#hWinTitle     { position:relative; padding-left:3px; padding-right:15px; vertical-align:middle; }
#hWinTitleText { color:#ffffff; font-family:trebuchet ms,arial; font-weight:bold; font-size:18px; }

</style>
<script language='javascript'>
var topMarg=175
var HoverVal=""
function playSound(soundName) { document.getElementById(soundName).Play() }
function shim(obj) {
  var shim=document.getElementById("hWinShim").style
  shim.height=obj.offsetHeight+'px'
  shim.width=obj.offsetWidth+'px'
  shim.left=obj.offsetLeft
  shim.top=obj.offsetTop
  shim.zIndex=99
  shim.display='block'
  }
function unShim() { document.getElementById("hWinShim").style.display='none' }
function showHover(title,content,focus) { 
  document.getElementById("hWinTitleText").innerHTML=title
  document.getElementById("hWinContent").innerHTML=content
  var winWid=document.getElementById("hWin").offsetWidth
  var winHgt=document.getElementById("hWin").offsetHeight
  var scnWid=document.body.clientWidth
  var scnHgt=document.body.clientHeight
  var hovTop=(document.body.scrollTop+topMarg)
  if ( (topMarg+winHgt)>scnHgt ) { hovTop=scnHgt-winHgt; if (hovTop<1) { hovTop=1 } }
  var hovLeft=document.body.scrollLeft + ((scnWid-winWid)/2)
  document.getElementById("hWin").style.top=hovTop
  document.getElementById("hWin").style.left=hovLeft
  var hvw=document.getElementById("hWin")
// next line unnecessary?
  var ifr=document.getElementById("hWinShim")
  hvw.style.visibility="visible"
  hvw.style.display="block"
  shim(hvw)

  if (focus!="") { 
    var f=ff(focus)
    if (radioField(f)) { if (f[1]) { f=f[1] } }
    s='ff("'+focus+'").focus()'
    if (f) { setTimeout(s,25) }
    }
  }

//------------------------------------------------------------------------
function closeHover(reFocus) {
  document.getElementById("hWin").style.visibility="hidden"
  unShim()
  if (reFocus) { lastBlur.focus() }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function hoverButton(btnVal,FldName,FormFldName) {
  HoverVal=-1
  if (btnVal==1) { HoverVal=radioVal(ff("radioToolbox")) }
  closeHover(false)
  if (HoverVal==1) { getNote(FldName) }
  if (HoverVal==2) { ItemMissing(ff(FormFldName),true) }
  if (HoverVal==3) { PartialDate(FldName,FormFldName) }
  lastBlur.focus()
  }
//------------------------------------------------------------------------

</script>
<!-- keep next five lines to show the hover window -->
<span style='height:0px;width:0px;position:absolute; top:0px; left:0px;'>

</span>
<iframe id="hWinShim" src="javascript:false;" scrolling="no" frameborder="0" style="position:absolute; top:0px; left:0px; display:none;"></iframe>
<div id='hWin'><table border='0' cellspacing='0'>
  <tr class='hWinHead'><td><span id='hWinTitle'><span id='hWinTitleText'></span><span style='width:18px;'></span></span><a href='javascript:closeHover(true)' onMouseOver='javascript:hWinCloseImg.src="WindowXon.gif"' onMouseOut='javascript:hWinCloseImg.src="WindowX.gif"'><img name='hWinCloseImg' src='WindowX.gif' class='hWinHeadImg'></a></td></tr>
  <tr><td align='center'><div id='hWinContent'></div></td></tr></table></div>
<!-- end of hover window code -->
<script language='javascript'>

//------------------------------------------------------------------------
function ToolboxClick(TF) {
  parent.frames['dsFrameMain'].focus()
  Toolbox(TF)
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function IsDateField(FN) {
  var datefld=0
  if (ff(FN)) {
    var s=""+ff(FN).onchange
    if (s.indexOf("dateValidate")>0) { datefld=1 }
    }
  if (datefld==1) { return true } else { return false }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function Toolbox(TF) {
  if (!TF.dsID2) { alert("No form item currently active."); return }
  var FldName=TF.dsID2
  if (TF.chkgrp) { FldName=TF.chkgrp }
  var FormFldName=TF.name
  if (document.getElementById("radioToolbox")) { ff("radioToolbox").value=-1 }
  var s=""
  s+="<center><b>What do you want to do with Item "+FldName+"?</b></center>"
  s+="<tr><td>&nbsp;</td></tr>"x
  s+="<center><table border='0'>"
  s+="<tr><td><input type='radio' value='1' name='radioToolbox' class='NoBorder'>&nbsp;Enter note/comment</td></tr>"
  if (AllowMissing==1) {
    if (IsMissing(ff(FormFldName))) { 
      s+="<tr><td><input type='radio' value='2' name='radioToolbox' class='NoBorder'>&nbsp;Remove <b>MISSING</b> mark for this item</td></tr>"
      }
    else {
      s+="<tr><td><input type='radio' value='2' name='radioToolbox' class='NoBorder'>&nbsp;Mark item as <b>MISSING</b></td></tr>"
      if (IsDateField(FormFldName)) { s+="<tr><td><input type='radio' value='3' name='radioToolbox' class='NoBorder'>&nbsp;Enter partially missing date item</td></tr>" }
      }
    }

  s+="<tr><td>&nbsp;</td></tr>"
  s+="<tr><td><button onClick='hoverButton(1,\""+FldName+"\",\""+FormFldName+"\")'>&nbsp;OK&nbsp;</button>&nbsp;&nbsp;&nbsp;<button onClick='hoverButton(2,0,0)'>&nbsp;Cancel&nbsp;</button></td></tr>"
  s+="</table></center>"
  showHover("Toolbox Functions (Item "+FldName+")",s,"radioToolbox")
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function MissingForbidden(f) {
  for (var i=0; i<=ForbidMissingArr.length; i++) { if (ForbidMissingArr[i]==f.name.toUpperCase()) { return true } }
  return false
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function getMissing() {
  var s=""; var skip=0
  var dsForm=ff(dsFormName)
  for (var i=0; i<dsForm.length; i++) { 
    var f=dsForm.elements[i]
    var skip=0
    // only add radio fields once even though all elements are marked
    if (radioField(f)) { if (f.dsRadio!=1) { skip=1 } }
    if (skip==0) { if (IsMissing(f)) { if (s!="") { s+=";" } s+=f.name } }
    }
  return s
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function loadMissing(strMissing) {
  arrMissing=strMissing.replace(/%3B/gi,";").split(";")
  for (var i=0; i<arrMissing.length; i++) { if (ff(arrMissing[i])) { markMissing(ff(arrMissing[i]),true) } }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function ItemMissing(f,strict) {
  if (MissingForbidden(f)) { alert("This item may not be marked 'missing'."); return }
    var FldName=f.dsID2
    if (f.chkgrp) { FldName=f.chkgrp }
  if (IsMissing(f)) { 
    markMissing(f,false)
    alert("Item "+FldName+" no longer marked as 'missing'!")
    }
  else {
    if (IsFieldBlank(f) || (!strict)) {
      markMissing(f,true)
      alert("Item "+FldName+" marked as missing!")
      }
    else { alert("Item "+FldName+" is not blank and may not be marked as missing.") }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function doPartialDate(FldName,FormFldName) {
// alert("doPartialDate\nFldName="+FldName+"\nFormFldName="+FormFldName+"\npdDy="+ff("pdDy").value+"\npdMn="+ff("pdMn").value+"\npdYr="+ff("pdYr").value)
  closeHover()
  ret=""
  var pd=""
  if (trim(ff("pdDy").value)!="") { alert("Not expecting any value for day-of-month to be entered for a partially-missing date!"); return }
  if (trim(ff("pdYr").value)=="") { alert("You must enter at least a year for a partially-missing date!"); return }
  var pdYr=parseInt(ff("pdYr").value,10)
  if (DateFormat==4) 
    { if ( (pdYr<0) || (pdYr>2099) || (ff("pdYr").value.length!=4) ) { alert("The year must be between '00' and '2099'!"); return } }
    else { if ( (pdYr<0) || (pdYr>99) || (ff("pdYr").value.length!=2) ) { alert("The year must be between '00' and '99'!"); return } }
  if (trim(ff("pdMn").value)=="") { 
    pd=String.fromCharCode(183,183,183,183,183)+ff("pdYr").value
    ff(FormFldName).value=pd
    ItemMissing(ff(FormFldName),false)
    return
    }
  var pdMn=-1
  var mn=trim(ff("pdMn").value.toUpperCase())
  for (i=0; i<monthArr.length; i++) { if (mn==monthArr[i]) { pdMn=i } }
  if (pdMn==-1) { alert("Invalid month entered!"); return }
  pd=String.fromCharCode(183,183)+ff("pdMn").value.toUpperCase()+ff("pdYr").value
  ff(FormFldName).value=pd
  ItemMissing(ff(FormFldName),false)
  lastBlur.focus()
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function PartialDate(FldName,FormFldName) {
  if (MissingForbidden(ff(FormFldName))) { alert("This item may not be marked 'missing'."); return }
  if (IsFieldNotBlank(ff(FormFldName))) { alert("Item "+FldName+" is not blank and may not be marked with a partial date."); return }
  var s=""
  s+="<center><b>Enter non-missing portions of date for item "+FldName+"</b></center>"
  s+="<br><center><table border='0'>"
  s+="<tr><td><input name='pdDy' size='4'></td><td><input name='pdMn' size='4'></td><td><input name='pdYr' size='4'></td></tr>"
  s+="<tr><td align='center'>(Day)</td><td align='center'>(Month)</td><td align='center'>(Year)</td></tr>"
  s+="<tr><td colspan='3'>&nbsp;</td></tr>"
  s+="<tr><td colspan='3'><button onClick='doPartialDate(\""+FldName+"\",\""+FormFldName+"\")'>&nbsp;OK&nbsp;</button>&nbsp;&nbsp;&nbsp;<button onClick='javascript:closeHover()'>&nbsp;Cancel&nbsp;</button></td></tr>"
  s+="<table></center>"
  showHover("Enter Partial Date",s,"pdDy")
  }
//------------------------------------------------------------------------


//########################################################################
//##### dsInputBox
//########################################################################
var bgDivPtr=null
var bgShimPtr=null
var ibDivPtr=null
var ibCallback=null
var ibText=null

function addElement(id,type,style,attrs) {
  var tnode = document.createElement(type);
  tnode.id=id;
  document.body.appendChild(tnode);
  var tstyle = document.createStyleSheet()
  if (style!='') { tstyle.addRule('#'+id,style) }
  if (attrs!='') {
    var a=attrs.split(';')
    for (var i=0; i<a.length; i++) { var b=a[i].split('|'); tnode.setAttribute(b[0],b[1]); }
    }
  return document.getElementById(id);
  }


function grayScreen() {
//if (bgDivPtr==null)  { bgDivPtr =addElement('bgDiv', 'div',   'opacity:0.8;position:absolute;top:0px;left:0px;background-color:#555555;height:'+document.body.scrollHeight+'px;display:none;z-index:50;filter:alpha(opacity=80);width:'+document.body.scrollWidth+';','') }
  if (bgShimPtr==null) { bgShimPtr=addElement('bgShim','iframe','opacity:0.1;position:absolute;top:0px;left:0px;background-color:#111111;height:'+document.body.scrollHeight+'px;display:none;z-index:49;filter:alpha(opacity=80);width:'+document.body.scrollWidth+';','src|javascript:"<html><body bgcolor=#555555></html>"') }
  bgShimPtr.style.display='block'
//bgDivPtr.style.display='block';
  }
function ungrayScreen() {
  if (bgDivPtr !=null) { bgDivPtr.style.display='none' }
  if (bgShimPtr!=null) { bgShimPtr.style.display='none' }
  }

function killDivInput(cancelled) {
  if (ibDivPtr!=null) { 
    if (ibDivPtr.style.display=='block' && !cancelled) { ibText=document.getElementById("ibFld").value }
    ibDivPtr.style.display='none'
    ibDivPtr.style.visibility='hidden' 
    }
  ungrayScreen()
  if (ibCallback!=null) { ibCallback(ibText) }
  }

function divInput(pr,title,def,callback) {
  if (ibDivPtr==null) { ibDivPtr=addElement('ibDiv','div','display:block;visibility:hidden;border:2px solid blue;background-color:#dddddd;position:absolute;width:330px;z-index:100;top:'+parseInt(document.documentElement.scrollTop+(screen.height/2),10)+'px;left:'+parseInt((document.body.offsetWidth-315)/2,10)+'px;','') } 
  ibDivPtr.style.display='block'
  var s = '<div style="width: 100%; background-color: blue; color: white; font-family: verdana; font-size: 10pt; font-weight: bold; height: 10px">'+title+'</div>';
  s += '<div style="padding: 10px">'+pr+'<BR><BR>';
  s += '<form onsubmit="javascript:return false;">';
  s += '<input id="ibFld" name="ibData" type=text size=46 value="'+def+'">';
  s += '<br><br><center>';
  s += '<button onclick="killDivInput(false)">&nbsp;OK&nbsp;</button>'
  s += '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
  s += '<button onclick="killDivInput(true)">&nbsp;Cancel&nbsp;</button>';
  s += '</form></div>';
  ibDivPtr.innerHTML=s;
  ibDivPtr.style.top=parseInt(document.body.scrollTop+((document.body.offsetHeight-ibDivPtr.offsetHeight)/2),10)
  ibDivPtr.style.left=parseInt(document.body.scrollLeft+((document.body.offsetWidth-ibDivPtr.offsetWidth)/2),10)
  ibText=null
  ibCallback=callback
  ibDivPtr.style.visibility='visible'; 
  setTimeout('document.getElementById("ibFld").focus()',100)
  }

function dsInputBox(Prompt,Title,DefValue,CallBack) {
  //does not wait for return value
  grayScreen()
  divInput(Prompt,Title,DefValue,CallBack)
  }
//########################################################################

function getOneNote(FldName,CurNote) {
  dsInputBox("Enter note for item "+FldName+":","Enter Note",CurNote,jsSaveNote)
  }
function jsSaveNote(S) { if (S!=null) { SaveNote(S) } }
</script>

<SCRIPT LANGUAGE="VBScript">
Dim dsNoteDelim
Dim NoteFld
dsNoteDelim=Chr(10)

FUNCTION GetEnteredNote(FldName)
  Dim S, T, A, Ret
  Ret = ""
  S = document.getElementById("FormNotes").value
  A = Split(S,dsNoteDelim)
  For Each T In A
    If Mid(T,1,Len(FldName&":"))=FldName&":" Then
      Ret = Ret & Mid(T,Len(FldName&":")+1)
      End If
    Next
  GetEnteredNote = Ret
END FUNCTION

SUB ReplaceNote(FldName,NewNote)
  Dim S, T, A, Found, Note
  S = document.getElementById("FormNotes").value  
  A = Split(S,dsNoteDelim)
  Found=FALSE
  Note = ""
  For Each T in A
    If Mid(T,1,Len(FldName&":"))=FldName&":" Then
      Found=TRUE
    Else 
      If Note<>"" Then T = dsNoteDelim & T
      Note=Note & T
      End If
    Next
  S = FldName & ":" & NewNote
  If Note<>"" Then S = dsNoteDelim & S
  Note=Note & S
  document.getElementById("FormNotes").value=Note
END SUB

FUNCTION getNote(FldName)
  Dim Def,S
  Def = GetEnteredNote(FldName)
  NoteFld=FldName
  S=getOneNote(FldName,Def)
END FUNCTION

FUNCTION SaveNote(S)
  ReplaceNote NoteFld,S
  If lastFieldFocus>0 Then RestoreFocus(lastFieldFocus)
END FUNCTION

</SCRIPT>

<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />

<SCRIPT Language='Javascript'>
var strDebug=""
function handleError(msg,url,line) {
  var s="An Error Has Occurred!\n\n"+
        "Please jot down the following information to help us track it down.\n\n"+
        "Page:        "+document.location.href.substr(document.location.href.lastIndexOf("/")+1)+"\n"+
        "Message:  "+msg+"\n"+
        "Line:          "+line+"\n\n"+
        "We are very sorry you experienced a problem and will do our best to correct it.\n\n"+
        "Please report the problem by sending us a feedback form, and include the page, message,\n"+
        "and line reported above.  You should not continue with the task you were performing when\n"+
        "this error occurred -- it will probably fail, perhaps without warning."
  if (strDebug!="") { s+="\n\nDebug:\n"+strDebug }
  alert(s)
  return false
  }
window.onerror=handleError
</SCRIPT>
<script language='javascript'>
  var SessionLen  =30*60000-60000
  </script>


<SCRIPT LANGUAGE="JavaScript">
var ServerDate="06/01/2018"
var FirstDate= "01JUL2017"
var Visits= {'V1':'01','V2':'02','N':'03'}
var ClinicLets= {'BCM':'A','DUKE':'B','EU':'C','MICH':'C','IC':'D','LIJ':'G','PNW':'G','TU':'H','LSU':'H','NCC':'K','NJC':'L','NNEC':'M','NYC':'N','NYMC':'O','OSU':'P','UAB':'P','STL':'Q','STV':'R','UCSF':'S','UMKC':'S','UMSF':'T','UCSD':'U','UAZ':'V','UVA':'W','DCC':'X','ALA':'Y'}

function pz(n) { if ( (parseInt(n,10)>0) && (parseInt(n,10)<10) ) { return "0"+n } else { return n } }

//------------------------------------------------------------------------
function ValidateHeader(FormRoot) {
  if ( (ff(FormRoot+"01").value != ff("LoginClinic").value) && (ff(FormRoot+"01").value != 'TEST') ) 
    { AddErr("Clinic entered in item 1 does not match the login clinic.") }
  if (ff(FormRoot+"02").value.toUpperCase() !=  formID.toUpperCase()) {
    if (!confirm("The entered participant ID is not the one selected from the Participant Table!  Continue Anyway?")) 
      { AddErr("Participant ID not entered as selected from the Participant Table.") }
    }
  else { if (ff(FormRoot+"03").value.toUpperCase() != formCD.toUpperCase()) { AddErr("Incorrect name code entered for this participant ID.") } }

  // section a
  FlagBlankFields("E",FormRoot+"01;"+FormRoot+"02;"+FormRoot+"03;"+FormRoot+"04;"+FormRoot+"05")
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function ValidateQHeader(FormRoot,ClinicFld) {
  if ( (ff(FormRoot+ClinicFld).value != ff("LoginClinic").value) && (ff(FormRoot+ClinicFld).value != 'TEST') ) 
    { AddErr("Clinic entered in item "+ClinicFld+" does not match the login clinic.") }
  if (ff(FormRoot+"00a").value.toUpperCase() !=  formID.toUpperCase()) {
    if (!confirm("The entered participant ID is not the one selected from the Participant Table!  Continue Anyway?")) 
      { AddErr("Participant ID not entered as selected from the Participant Table.") }
    }
  else { if (ff(FormRoot+"00b").value.toUpperCase() != formCD.toUpperCase()) { AddErr("Incorrect name code entered for this participant ID.") } }

  // admin box
  FlagBlankFields("E",FormRoot+"00a;"+FormRoot+"00b;"+FormRoot+"00c;"+FormRoot+"00d")
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function PINCheck(fldnames) {
  // check PINs entered in fields specified by fldnames to confirm they match the login clinic
  var clinicLet=trim(ff("LoginPIN").value.toUpperCase()).substr(0,1)
  if (clinicLet=="X") { return true }  // ignore if login clinic is CC
  var flds = fldnames.split(";")
  for (var i=0; i<flds.length; i++) {
    f=ff(flds[i])
    var PINLet=trim(f.value.toUpperCase()).substr(0,1)
    if (PINLet=="") { return true }
    if (PINLet!=clinicLet) { AddErr("PIN specified in item "+f.dsID2+" does not match the login clinic.") }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function CheckDates(D1Str,D2Str,Cond) {
  var ret=false
  var D1=dsDateStringToDate(D1Str)
  var D2=dsDateStringToDate(D2Str)
  var D1T=D1.getTime()+0
  var D2T=D2.getTime()+0
  if ((D1!=badDate) && (D2!=badDate)) {
    switch (Cond) {
      case '>' : if (D1T>D2T)  { ret=true }; break;
      case '>=': if (D1T>=D2T) { ret=true }; break;
      case '=' : if (D1T==D2T) { ret=true }; break;
      case '<' : if (D1T<D2T)  { ret=true }; break;
      case '<=': if (D1T<=D2T) { ret=true }; break;
      case '!=': if (D1T!=D2T) { ret=true }; break;
      case '<>': if (D1T!=D2T) { ret=true }; break;
      }
    }
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function SpecifyCheck(ItemRoot,OtherItem,SpecItem,OtherText) {
// alert("SpecifyCheck\n\n"+"ItemRoot="+ItemRoot+"\nOtherItem="+OtherItem+"\nSpecItem="+SpecItem+"\nOtherText="+OtherText)
  if (checkboxField(document.getElementById(ItemRoot+OtherItem))) {
    if (checkboxVal(document.getElementById(ItemRoot+OtherItem))=="Y") {
      if (IsFieldBlank(document.getElementById(SpecItem))) { AddErr("No '"+OtherText+"' specified in item "+OtherItem+".") }
      }
    else {
      if (IsFieldNotBlank(document.getElementById(SpecItem))) { AddErr("'"+OtherText+"' specified in item "+OtherItem+" but '"+OtherText+"' not checked.") }
      }
    }
  else { 
    if (radioVal(document.getElementById(ItemRoot+OtherItem))==SpecItem) {
      if (IsFieldBlank(document.getElementById(ItemRoot+OtherItem+"s"))) { AddErr("No '"+OtherText+"' specified in item "+OtherItem+".") }
      }
    else {
      if (IsFieldNotBlank(document.getElementById(ItemRoot+OtherItem+"s"))) { AddErr("'"+OtherText+"' specified in item "+OtherItem+" but '"+OtherText+"' not selected.") }
      }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function ff(name) { return document.getElementById(name) }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function COCOStatus() {
  // show time left until session expires
  var ret=""
  var Cur=new Date()
  var TimeLeft=SessionLen-(Cur.getTime()-SessionStart.getTime())
  // give warning at 5-minute mark
  if ((TimeLeft<300000) && (SessionFlag==0)) { SessionFlag=1; alert("You will be logged out of the server in approximately five minutes!") }
  var Mins=Math.floor(TimeLeft/60000)
  var Secs=+Math.floor((TimeLeft-60000*Mins)/1000)
  var MinsStr=""+Mins; var SecsStr=""+Secs
  if (Mins<10) { MinsStr="0"+MinsStr }
  if (Secs<10) { SecsStr="0"+SecsStr }
  if (EditMode==1) { ret += "<b>Form Edit</b>" } else { ret += "<b>Pass "+PassNumber+" of "+PassCount+"</b>" }
  ret += "<br>Logout In <b style='color:cyan'>" + MinsStr+":"+SecsStr  + "</b>"
  return ret
  }
//------------------------------------------------------------------------

var SessionStart=new Date()
var SessionFlag =0

window.setTimeout('window.setInterval("if (dsInfoSpanVar!=null) { dsStatusSpanVar.innerHTML=COCOStatus() }",1000)',30000)

</SCRIPT>


<script language='javascript'>
var strDebug=""
function xlKeyDown(e) {
  var takekey=false
  if (window.event.ctrlKey) {
    var ch=String.fromCharCode(window.event.keyCode).toUpperCase()
    }
  dsKeyDown(e)
  }
function chkboxLogic(N,excLtr) { if (CountChecks(N)>1 && (iv(N+"_"+excLtr)=="Y")) { AddErr("Item "+N+excLtr+" checked but other parts of item "+N+" also checked.") } }
function itmBlankOK(fn) { if (xlBlankOK[fn]==1) { return true } else { return false } }
function itmSkipped(fn) { if (xlSkips[fn]!="") { return true } else { return false } }
function manualSkip(itm,skipID) { xlSkips[itm]=skipID }
function clearSkip(itm) { xlSkips[itm]="" }
function xlCheckItem(f,fn) { 
  var itm=document.getElementById(fn)
  if (!itm) { itm=getFirstCheckboxField(fn) }
  if (!itm) { alert("Unable to locate form item '"+fn+"'!") }
  if (itm.type.toLowerCase()=="hidden") { return }
  if (IsFieldBlank(itm)) { if (!itmBlankOK(fn) && !itmSkipped(fn)) { FlagBlankFields("E",fn) } } 
    else { if (itmSkipped(fn)) { AddErr("Skip pattern violation, item "+xlSkips[fn]+" (Item "+itm.dsID2+" not blank).") } }
  }

//------------------------------------------------------------------------
function processSkips() {
  for (var itm in xlSkipItems) {
    if (dbgMode) { strDebug+="ProcessSkips, SkipItem="+xlSkipItems[itm].SkipItem+"...\n" }
    if (""+getFieldValue(document.getElementById(xlSkipItems[itm].SkipItem),0)==xlSkipItems[itm].SkipVal) {
      var SkipOpen=-1
      var SkipClosed=-1
      for (var i=0; i<xlNames.length; i++) {
        if (xlNames[i]==xlSkipItems[itm].SkipFrom) { SkipOpen=1 }
        if (xlNames[i]==xlSkipItems[itm].SkipTo)   { SkipClosed=1 }
        if (SkipOpen!=SkipClosed) { xlSkips[xlNames[i]]=xlSkipItems[itm].SkipID }  // mark items between SkipFrom and SkipTo
        }
      }
    }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function ItemList(Start,Stop) {
  // create a semicolon delimited list of all items from Start to Stop
  var list=""
  var listOpen=-1; var listClosed=-1
  for (var i=0; i<xlNames.length; i++) {
    if (xlNames[i]==Start) { listOpen=1 }
    if (xlNames[i]==Stop)  { listClosed=1 }
    if (listOpen!=listClosed) { list+=";"+xlNames[i] }
    }
  if (list!="") { list.substring(1) }
  return list
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function setSkip(skipID,skipFrom,skipTo) {
  SkipAll(ItemList(skipFrom,skipTo),skipID)
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function xlAutoCheck(f) {

  if (dbgMode) { strDebug+="About to 'ProcessSkips'...\n" }
  processSkips()

  // standard checking for each item
  for (var i=0; i<xlNames.length; i++) { if (dbgMode) { strDebug+="Standard auto check, item="+xlNames[i]+"...\n" }; xlCheckItem(f,xlNames[i]) }

  // check "specify" items
  if (dbgMode) { strDebug+="About to 'ProcessSpecs'...\n" }
  processSpecs()

  // check exclusive multiple-choice options
  if (dbgMode) { strDebug+="About to 'ProcessExclusives'...\n" }
  processExclusives()

  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function iv(Item) { return getFieldValue(ff(FormRoot+pz(Item))) }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function CountVals(ItemList,Val) {  
  // count # of items in ItemList that have value 'Val'
  var ret=0
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (getFieldValue(ff(items[i]))==Val) { ret+=1 } }
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AllVals(ItemList,Val) {  
  // check if all items in ItemList have value 'Val'
  var ret=true
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (getFieldValue(ff(items[i]))!=Val) { ret=false } }
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AnyVals(ItemList,Val) {  
  // check if any items in ItemList have value 'Val'
  var ret=false
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (getFieldValue(ff(items[i]),0)==Val) { ret=true } }
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AnyBlank(ItemList) {
  // check if any items in ItemList are blank
  var ret=false
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (IsFieldBlank(ff(items[i]))) { ret=true } } 
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AnyMissing(ItemList) {
  // check if any items in ItemList are missing
  var ret=false
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (IsMissing(ff(items[i]))) { ret=true } } 
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function AllBlank(ItemList) {
  // check if all items in ItemList are blank
  var ret=true
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (IsFieldNotBlank(ff(items[i]))) { ret=false } } 
  return ret
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function SumVals(ItemList) {  
  var sum=0
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (IsFieldNotBlank(ff(items[i]))) { sum += parseFloat(ff(items[i]).value) } }
  return sum
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function SumRadio(ItemList) {  
  var sum=0
  var items=ItemList.split(";")
  for (var i=0; i<items.length; i++) { if (IsFieldNotBlank(ff(items[i])) && !IsMissing(ff(items[i]))) { sum += parseInt(radioVal(ff(items[i])),10) } }
  return sum
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function SkipAll(ItemList,SkipID) {
  // set a manual skip on a list of items
  var items = ItemList.split(";")
  for (var i=0; i<items.length; i++) { manualSkip(items[i],SkipID) }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function ClearSkips(ItemList,SkipID) {
  // clear skips on a list of items
  var items = ItemList.split(";")
  for (var i=0; i<items.length; i++) { clearSkip(items[i]) }
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function xlValidateForm(Frm) {
  initErrs()
  for (var i=0; i<xlNames.length; i++) { xlSkips[xlNames[i]]="" }  // set up for checking skip patterns
  if (dbgMode) { strDebug+="About to 'CustomCheck'...\n" }
  if (typeof xlCustomCheck == 'function') { xlCustomCheck(Frm) }
  if (dbgMode) { strDebug+="About to 'AutoCheck'...\n" }
  xlAutoCheck(Frm)
  if (dbgMode) { strDebug+="About to 'ValidateHook'...\n" }
  if (typeof xlValidateHook == 'function') { return xlValidateHook(Frm,errCnt,warnCnt) } else { return checkErrs() }
  if (dbgMode) { strDebug+="Done with 'ValidateForm'...\n" }
  }
//------------------------------------------------------------------------
</script><style>
  tr.ctr td { text-align:center; }
  tr.ul, tr.ul td, td.ul { border-bottom: 1px solid black; border-top: 1px solid black; }
  tr.sb, tr.sb td, td.sb { border-left: 1px solid black; border-right: 0px solid black; }
  table.lg, table.lg tr, table.lg td { padding:0px; border-collapse:collapse; text-align:center; }
  table.lg { width:900px; }
  table.tg, table.tg tr, table.tg td { padding:0px; border-collapse:collapse; text-align:center; }
  table.tg { width:100%; }
</style>
<script language='javascript'>
function FCPreFill() {
  var vd =dsDateStringToDate(iv("4"))
  if (vd==badDate) { alert("Can't check 'Study Pill' boxes until date entered in item 4.") }
  else {
    if (confirm("About to mark 'Study Pill' as taken every day... please confirm.")) {
      var td=new Date(vd.getYear(),vd.getMonth()+1,0)
      var nd=td.getDate()
      for (var i=1; i<=nd; i++) { ff("FC1_D"+pz(i)+"_Pill").checked=true }
      }
    }
  }
</script>

<html>
<head>
<link rel="stylesheet" type="text/css" href="COCOData.css">
<title>COCO Form </title>
</head>
<body>
<span style='width: 100%; filter:progid:DXImageTransform.Microsoft.Gradient(GradientType=1,StartColorStr=#FFFFFF,EndColorStr=hotpink)'><table width='100%' border='0' cellpadding='0' cellspacing='0'><tr><td rowspan='2' width='1'><a href='http://www.lungusa.org'><img src='\Secure\Common\ala_logo_color(trans).gif' alt='\Secure\Common\ala_logo_color(trans).gif' align='left' style='border: medium none'></a></td>
    <td style='vertical-align:bottom; text-align:left; '><a href='http://www.cctrials.org/alaacrc' target='_top'><div style='font-family:serif; color:black; font-size:8pt;'>&nbsp;Asthma Clinical Research Centers (ALA-ACRC)</div></a></td>
    <td rowspan='2' style='text-align:right; '><a href='http://www.jhcct.org/Secure/COCO/COCOHome.asp' target='_top'><span style='font-family:serif; color:maroon; font-size:22pt; font-weight:bold;'>COCO&nbsp;</span></a></td></tr><tr><td style='vertical-align:top; text-align:left; '><a href='http://www.jhcct.org/Secure/COCO/COCOHome.asp' target='_top'><div style='font-family:serif; color:black; font-size:8pt;'>&nbsp;Chronic Refractory <u>Co</u>ugh <u>Co</u>hort&nbsp;</div></a></td></tr>
</table></span>
<hr style='background-color: rgb(0,0,128); color: rgb(0,0,128)'>
<center><font style='font-size:9pt;'>Simon Zeng [DCC/X80] (<a href='\Secure\Directory\ACRCLogin.asp?Logout=YES&GoTo=http://www.jhcct.org/Secure/COCO/COCOHome.asp'>Logout</a>)</font></center><br><DIV align='center'><b>Biospecimen Collection (Form BC, Rev 1)</b></DIV>
<form AUTOCOMPLETE='off' method='POST' name='BC1' action='' target='_top' onsubmit='return dsSubmit(this)' onReset='return dsReset(this)' dsInfo="BC1<BR>Rev 1 (19APR17)" >
<div align='center'><div ID='dsFormTableStart'><table ID='dsFormTable' border='1' bordercolor='black' frame='border' rules='none' cellspacing='0' cellpadding='5' ><input type='hidden' name='DBName' value='BC' ><input type='hidden' name='FormName' value='BC1' ><input type='hidden' name='dsSubmitFlag' value='' ><input type='hidden' name='dsDDE' value='' ><input type='hidden' name='dsOverride' value='' ><tr BGCOLOR=#330066><td colspan='4'><font color='White' style='font-weight:bold;'>A.&nbsp;&nbsp;Clinical center, participant, and visit identification</font></td></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>1.</td>
<td valign='top' width='0%'>Clinical center ID:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC101></td>
<td width='0%'>
<SELECT Name='BC101' Size='1' class='NoBorder' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Select response (use up/down arrow keys)" dsID="1." dsID2="1" dsPrompt="Clinical center ID:" dsRow="2" dsBlank=1 >
  <option value='' >&lt;no selection&gt;
  <option value='BCM' >BCM
  <option value='DUKE' >DUKE
  <option value='EU' >EU
  <option value='MICH' >MICH
  <option value='IC' >IC
  <option value='LIJ' >LIJ
  <option value='PNW' >PNW
  <option value='TU' >TU
  <option value='LSU' >LSU
  <option value='NCC' >NCC
  <option value='NJC' >NJC
  <option value='NNEC' >NNEC
  <option value='NYC' >NYC
  <option value='NYMC' >NYMC
  <option value='OSU' >OSU
  <option value='UAB' >UAB
  <option value='STL' >STL
  <option value='STV' >STV
  <option value='UCSF' >UCSF
  <option value='UMKC' >UMKC
  <option value='UMSF' >UMSF
  <option value='UCSD' >UCSD
  <option value='UAZ' >UAZ
  <option value='UVA' >UVA
  <option value='DCC' >DCC
  <option value='ALA' >ALA
</SELECT></tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>2.</td>
<td valign='top' width='0%'>Participant ID:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC102></td>
<td width='0%'>
<input type='text' name='BC102' onChange='strValidate(BC1.BC102,"^O[A-Za-z]{1}\\d{3}$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='7' dsInfo="Participant ID [e.g. OZ123]" dsID="2." dsID2="2" dsPrompt="Participant ID:" dsRow="3" ></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>3.</td>
<td valign='top' width='0%'>Alpha ID code:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC103></td>
<td width='0%'>
<input type='text' name='BC103' onChange='strValidate(BC1.BC103,"^\\w{5}$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='7' dsInfo="Enter participant name code [e.g. BHLSW]" dsID="3." dsID2="3" dsPrompt="Alpha ID code:" dsRow="4" ></tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>4.</td>
<td valign='top' width='0%'>Date samples collected:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC104></td>
<td width='0%'>
<input type='text' name='BC104' onChange='dateValidate(BC1.BC104,"","")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='11' dsInfo="Please enter date [e.g. 04JUL2016]" dsID="4." dsID2="4" dsPrompt="Date samples collected:" dsRow="5" ></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>5.</td>
<td valign='top' width='0%'>Visit ID:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC105></td>
<td width='0%'>
<SELECT Name='BC105' Size='1' class='NoBorder' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Select response (use up/down arrow keys)" dsID="5." dsID2="5" dsPrompt="Visit ID:" dsRow="6" dsBlank=1 >
  <option value='' >&lt;no selection&gt;
  <option value='V1' >V1
</SELECT></tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>6.</td>
<td valign='top' width='0%'>Form version date:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC106></td>
<td width='0%'>
<SELECT Name='BC106' Size='1' class='NoBorder' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Select response (use up/down arrow keys)" dsID="6." dsID2="6" dsPrompt="Form version date:" dsRow="7" dsBlank=1 >
  <option value='' >&lt;no selection&gt;
  <option value='19APR2017' >19APR2017
</SELECT></tr>
<tr BGCOLOR='#e8e8ef'><td colspan='4'><font color='White' style='font-weight:bold;'>&nbsp;</font></td></tr>
<tr BGCOLOR=#330066><td colspan='4'><font color='White' style='font-weight:bold;'>B.&nbsp;&nbsp;For Quest</font></td></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>7.</td>
<td valign='top' width='0%'>Was zinc sample collected and shipped to Quest:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC107></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC107' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="7." dsID2="7" dsPrompt="Was zinc sample collected and shipped to Quest:" dsRow="10" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC107' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="7." dsID2="7" dsPrompt="Was zinc sample collected and shipped to Quest:" dsRow="10" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR=white><td colspan='4'><font color='White' style='font-weight:bold;'>&nbsp;</font></td></tr>
<tr BGCOLOR=#330066><td colspan='4'><font color='White' style='font-weight:bold;'>C.&nbsp;&nbsp;For storage</font></td></tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>8.</td>
<td valign='top' width='0%'>Did participant consent to banking specimens for future research:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC108></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC108' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="8." dsID2="8" dsPrompt="Did participant consent to banking specimens for future research:" dsRow="13" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC108' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="8." dsID2="8" dsPrompt="Did participant consent to banking specimens for future research:" dsRow="13" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No<b><font face='symbol'>&#174;</font></b>&nbsp;<span style='padding:1px;border:2px solid black'><b style='font-size:7pt;'>12</b></span></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>9.</td>
<td valign='top' width='0%'>Serum</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109></td>
<td width='0%'>
</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;a.</td>
<td valign='top' width='0%'>Aliquot 1 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109a></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC109a' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;a." dsID2="9a" dsPrompt="Aliquot 1 available:" dsRow="15" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC109a' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;a." dsID2="9a" dsPrompt="Aliquot 1 available:" dsRow="15" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Serum Aliquot 1 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109as></td>
<td width='0%'>
<input type='text' name='BC109as' onChange='strValidate(BC1.BC109as,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="9as" dsPrompt="Serum Aliquot 1 barcode here:" dsRow="16" ></tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;b.</td>
<td valign='top' width='0%'>Aliquot 2 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109b></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC109b' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;b." dsID2="9b" dsPrompt="Aliquot 2 available:" dsRow="17" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC109b' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;b." dsID2="9b" dsPrompt="Aliquot 2 available:" dsRow="17" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Serum Aliquot 2 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109bs></td>
<td width='0%'>
<input type='text' name='BC109bs' onChange='strValidate(BC1.BC109bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="9bs" dsPrompt="Serum Aliquot 2 barcode here:" dsRow="18" ></tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;c.</td>
<td valign='top' width='0%'>Aliquot 3 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109c></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC109c' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;c." dsID2="9c" dsPrompt="Aliquot 3 available:" dsRow="19" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC109c' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;c." dsID2="9c" dsPrompt="Aliquot 3 available:" dsRow="19" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Serum Aliquot 3 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109cs></td>
<td width='0%'>
<input type='text' name='BC109cs' onChange='strValidate(BC1.BC109cs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="9cs" dsPrompt="Serum Aliquot 3 barcode here:" dsRow="20" ></tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;d.</td>
<td valign='top' width='0%'>Aliquot 4 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109d></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC109d' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;d." dsID2="9d" dsPrompt="Aliquot 4 available:" dsRow="21" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC109d' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;d." dsID2="9d" dsPrompt="Aliquot 4 available:" dsRow="21" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Serum Aliquot 4 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC109ds></td>
<td width='0%'>
<input type='text' name='BC109ds' onChange='strValidate(BC1.BC109ds,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="9ds" dsPrompt="Serum Aliquot 4 barcode here:" dsRow="22" ></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>10.</td>
<td valign='top' width='0%'>Plasma</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110></td>
<td width='0%'>
</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;a.</td>
<td valign='top' width='0%'>Plasma aliquot 1 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110a></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC110a' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;a." dsID2="10a" dsPrompt="Plasma aliquot 1 available:" dsRow="24" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC110a' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;a." dsID2="10a" dsPrompt="Plasma aliquot 1 available:" dsRow="24" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Plasma Aliquot 1 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110as></td>
<td width='0%'>
<input type='text' name='BC110as' onChange='strValidate(BC1.BC110as,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="10as" dsPrompt="Plasma Aliquot 1 barcode here:" dsRow="25" ></tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;b.</td>
<td valign='top' width='0%'>Plasma aliquot 2 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110b></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC110b' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;b." dsID2="10b" dsPrompt="Plasma aliquot 2 available:" dsRow="26" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC110b' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;b." dsID2="10b" dsPrompt="Plasma aliquot 2 available:" dsRow="26" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Plasma Aliquot 2 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110bs></td>
<td width='0%'>
<input type='text' name='BC110bs' onChange='strValidate(BC1.BC110bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="10bs" dsPrompt="Plasma Aliquot 2 barcode here:" dsRow="27" ></tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;c.</td>
<td valign='top' width='0%'>Plasma aliquot 3 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110c></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC110c' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;c." dsID2="10c" dsPrompt="Plasma aliquot 3 available:" dsRow="28" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC110c' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;c." dsID2="10c" dsPrompt="Plasma aliquot 3 available:" dsRow="28" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Plasma Aliquot 3 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110cs></td>
<td width='0%'>
<input type='text' name='BC110cs' onChange='strValidate(BC1.BC110cs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="10cs" dsPrompt="Plasma Aliquot 3 barcode here:" dsRow="29" ></tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;d.</td>
<td valign='top' width='0%'>Plasma aliquot 4 available:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110d></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC110d' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;d." dsID2="10d" dsPrompt="Plasma aliquot 4 available:" dsRow="30" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC110d' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;d." dsID2="10d" dsPrompt="Plasma aliquot 4 available:" dsRow="30" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Plasma Aliquot 4 barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC110ds></td>
<td width='0%'>
<input type='text' name='BC110ds' onChange='strValidate(BC1.BC110ds,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="10ds" dsPrompt="Plasma Aliquot 4 barcode here:" dsRow="31" ></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>11.</td>
<td valign='top' width='0%'>Packed Cells</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC111></td>
<td width='0%'>
</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;a.</td>
<td valign='top' width='0%'>Did participant consent to DNA collection:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC111a></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC111a' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;a." dsID2="11a" dsPrompt="Did participant consent to DNA collection:" dsRow="33" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC111a' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;a." dsID2="11a" dsPrompt="Did participant consent to DNA collection:" dsRow="33" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No<b><font face='symbol'>&#174;</font></b>&nbsp;<span style='padding:1px;border:2px solid black'><b style='font-size:7pt;'>12</b></span></tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;&nbsp;&nbsp;b.</td>
<td valign='top' width='0%'>Vacutainer stored:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC111b></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC111b' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;b." dsID2="11b" dsPrompt="Vacutainer stored:" dsRow="34" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes<span style='visibility:hidden;'>&nbsp;<b><font face='symbol'>&#174;</font></b>&nbsp;<img align='middle' src='stop.gif'></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC111b' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="&nbsp;&nbsp;&nbsp;b." dsID2="11b" dsPrompt="Vacutainer stored:" dsRow="34" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<tr BGCOLOR='f0f0f0'><td valign='top' width='0%'>&nbsp;</td>
<td valign='top' width='0%'>Packed Cells barcode here:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC111bs></td>
<td width='0%'>
<input type='text' name='BC111bs' onChange='strValidate(BC1.BC111bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='20' dsInfo="Please scan or enter barcode number from label (ie. 1249990321)" dsID="&nbsp;" dsID2="11bs" dsPrompt="Packed Cells barcode here:" dsRow="35" ></tr>
<tr BGCOLOR='f0f0f0'><td colspan='4'><font color='White' style='font-weight:bold;'>&nbsp;</font></td></tr>
<tr BGCOLOR=#330066><td colspan='4'><font color='White' style='font-weight:bold;'>D.&nbsp;&nbsp;Administrative information</font></td></tr>
<tr BGCOLOR=white><td valign='top' width='0%'>12.</td>
<td valign='top' width='0%'>Form completed by PIN:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC112></td>
<td width='0%'>
<input type='text' name='BC112' onChange='strValidate(BC1.BC112,"^[A-Za-z]{1}\\d{2}$")' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' size='6' dsInfo="Enter PIN [e.g. D99]" dsID="12." dsID2="12" dsPrompt="Form completed by PIN:" dsRow="38" ></tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'>13.</td>
<td valign='top' width='0%'>Signature:</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errBC113></td>
<td width='0%'>
  <input type='radio' class=NoBorder name='BC113' onClick='dsRadioClick(this)' value='1' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="13." dsID2="13" dsPrompt="Signature:" dsRow="39" dsRadio=1   >&nbsp;&nbsp;(1)&nbsp;&nbsp;Yes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <input type='radio' class=NoBorder name='BC113' onClick='dsRadioClick(this)' value='2' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Please choose <b>YES</b> or <b>NO</b> (use arrow keys to change selection)" dsID="13." dsID2="13" dsPrompt="Signature:" dsRow="39" dsRadio=2   >&nbsp;&nbsp;(2)&nbsp;&nbsp;No</tr>
<input type='hidden' name='LoginClinic' value='DCC' ><input type='hidden' name='LoginPIN' value='X80' ><input type='hidden' name='xlFileDT' value='20171211-141241' ><tr BGCOLOR=white><td valign='top' width='0%'></td>
<td valign='top' width='0%'>Form Notes:<br>(Read-Only)</td>
   <td width='5'><IMG SRC='ok3.gif' NAME=errFormNotes></td>
<td width='0%'>
<textarea rows='5' cols='40' wrap='virtual' ReadOnly  style='font-size:8pt;' name='FormNotes' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)' dsInfo="Notes for this form (read-only)" dsID="" dsID2="FormNotes" dsPrompt="Form Notes:<br>(Read-Only)" dsRow="40" ></textarea>
</tr>
<tr BGCOLOR='#e8e8ef'><td valign='top' width='0%'></td>
<td valign='top' width='0%'></td>
   <td width='5'><IMG SRC='ok3.gif' NAME=err></td>
<td width='0%'>
<input type='button' name='btnSubmit' value='Done' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)'  dsInfo='Press Done To Submit' dsID2='' dsRow='41' onClick='dsSubmit(BC1)' >
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type='reset' name='btnReset' value='Reset' onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)'  dsInfo='Press Reset To Clear All Values' dsID2='' dsRow='41' >
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<input type='button' name='DraftSave' value='Save Draft'  onFocus='dsGetFocus(this)' onBlur='dsLoseFocus(this)'  dsInfo='Save draft form and exit' dsID2='' dsRow='41' onClick='SaveDraft(BC1)' ></tr>
<input type='hidden' name='dsSessionVars' value='%40AQGIi%60agZBB%FAV7+mSPFVZx%7FptXptpvC%D6f%60gYgdzjfDKD%40aQ%5CW%C4g%5C%5BXV%19%60%5ERZB%5B3%11%2307%06%292%26%3D%BD7%0A%22%3C%22%03%253%21+%A2%60xivhkme%7EfZQPYUSF%26%25%15%0C%04%1E' ><input type='hidden' name='dsMissing' value='' ><input type='hidden' name='MemoFields' value='FORMNOTES;DSJOINEDFIELDS;DSMISSING;DSSESSIONVARS;' ></table></div></div>
</form></div>

<div ID='dsStatusMessage'></div>
<script language='javascript'>
<!-- 
var dsFormName = 'BC1'
var dsFormInfo = 'BC1<BR>Rev 1 (19APR17)'
var fldValidCnt = 13
var fldStrs = new Array(13)
   fldStrs[0] = 'strValidate(BC1.BC102,"^O[A-Za-z]{1}\\d{3}$")'
   fldStrs[1] = 'strValidate(BC1.BC103,"^\\w{5}$")'
   fldStrs[2] = 'dateValidate(BC1.BC104,"","")'
   fldStrs[3] = 'strValidate(BC1.BC109as,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[4] = 'strValidate(BC1.BC109bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[5] = 'strValidate(BC1.BC109cs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[6] = 'strValidate(BC1.BC109ds,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[7] = 'strValidate(BC1.BC110as,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[8] = 'strValidate(BC1.BC110bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[9] = 'strValidate(BC1.BC110cs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[10] = 'strValidate(BC1.BC110ds,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[11] = 'strValidate(BC1.BC111bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")'
   fldStrs[12] = 'strValidate(BC1.BC112,"^[A-Za-z]{1}\\d{2}$")'
var gridCount = 0
var gridNames = new Array(0)
var gridCounts = new Array(0)
var PassCount= 2
// -->
</script>


<SCRIPT LANGUAGE='JavaScript'>
document.onkeydown=dsKeyDown

//------------------------------------------------------------------------
var FancyInputBox    = 1
var FancyInputBG     = 1
var FancyFocusColor  = 'Blue'
var FancyFocusBGColor= '#ffff00'
var FieldErrColor    = 'Red'
var FancyFocusBGColor= '#ffff00'
var StatusBGColor    = "'#330066'"
var ScrollFlag       = '1'
var goodImg          = 'ok3.gif'
var errImg           = 'redq.gif'
var missImg          = 'miss.gif'
var submitField      = 'dsSubmitFlag'
var dsSubmittedMsg   = '<br><br><center>Your Form Has Been Submitted.<br>Please Wait While It Is Processed.</center>'
var dsValidateMsg    = '<br><br><center>Your Form Is Being Validated.<br>Please Wait Until This Is Completed.</center>'
var dsNoBackMsg      = '<br><br><center>Your Form Has Already Been Submitted.<br>You Should Not Try To Re-Access It With The Browser&#39;s &quot;Back&quot; Button.</center>'
var maxDDE           = '8'
var maxBlankDDE      = '4'
var formAborted      = false
var NewLine	     = "\n"
var EditMode         = 0
var lastFieldFocus   = -1
var svFieldFocus     = -1
var lastBlur         = -1
var cntDDE	     = 0
var cntBlankDDE      = 0
var NoHideForm       = '0'
var firstFieldIdx    = '5'
var regDate          = "^(0?[1-9]|[12][0-9]|3[01])(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)(\\d{4})$"
var AllowDraftSaves  = 1
var DateFormat       = 4
var SaveDraftFlag    = 'SaveDraftFlag'
var AllowMissing     = 1
var ForbidMissingStr = 'FormNotes;         ;BC102;BC103;BC104;BC101;BC105;BC106'.toUpperCase()
var ForbidMissingArr = ForbidMissingStr.split(';')
var MissingColor     = 'orange'

var dsInfoSpanVar = null
var dsStatusSpanVar = null

document.getElementById("dsStatusMessage").style.display='none'


//------------------------------------------------------------------------
function SaveDraft(dsForm) {
  var s="You have chosen to save a draft copy of this form.\n\nIf you proceed, the form will be saved temporarily (not in the study database),\nfor later completion.  "
  if (PassCount>1) { s+="When the form is recalled for completion, it will be loaded\nas 'Pass 1' for double-data-entry." }
  s+="\n\nPress 'OK' to save a draft copy and exit this form.\nPress 'Cancel' to return to data entry.\n\n"
  if (!confirm(s)) { return false }
  if (top != self) { parent.document.getElementById("dsFrameSet").rows="*" }
  dsHideFormShowMessage("<br><br><center>Your form is being submitted for draft storage.<br>Please wait while it is processed.</center>")
  if (AllowMissing==1) { ff("dsMissing").value=getMissing() }
  // fix checkboxes
  for (var i=0; i<dsForm.length; i++) { if (checkboxField(dsForm.elements[i])) { if (dsForm.elements[i].checked==true) { dsForm.elements[i].value="Y" } else { dsForm.elements[i].value="N" } } }
  dsForm.elements[submitField].value=SaveDraftFlag
  dsForm.submit()
  return true
  }
//------------------------------------------------------------------------


//------------------------------------------------------------------------
function dsSubmit(dsForm)
// global validate/submit routine
{



   var p1=""
   var p2=""

   // first, do DDE for radio fields, if appropriate
   if ( (PassNumber==PassCount) && (PassNumber>1) ) {
      window.status="Checking DDE for single-choice and yes/no fields..."
      for (var i=0; i<dsForm.length; i++) {
         if (radioField(dsForm.elements[i])) {
            var f=dsForm.elements[i]
            if ((fldComp(getFieldValue(f,1)) != fldComp(getFieldValue(f,PassNumber))) && (f.dsPass2OK != "OK")) {
               f.focus()
               if (dsDblConfirm(f)) {
                  var radioGrp=document.getElementsByName(f.name)
                  for (var i=0; i<radioGrp.length; i++) { radioGrp[i].dsPass2OK="OK" }
                  }
               else {
                  var radioGrp=document.getElementsByName(f.name)
                  for (var i=0; i<radioGrp.length; i++) { 
                     if (radioGrp[i].value==f.pass1value) { radioGrp[i].checked=true }
                     }
                  }
               alert("Please Re-Submit The Form If All Entries Look OK.")
               return false
               }   // if fldComp ...
            }   // if radioField ...
         }   // for (var i=0; ...
      }   // if PassNumber==PassCount ...

   window.status = "Preparing to check for submission..."
   var confMsg = ""
   var confRsp = false
   // hide form and show 'Processing Message'
   dsHideFormShowMessage(dsValidateMsg)

   // confirm submission
   if (PassNumber==PassCount) {
      confMsg='Accept this form and submit it for processing?'   
      }
   else {
      confMsg='Accept these entries and prepare to re-enter the form?'
      }
   if (confMsg!='') {
      confRsp=dsConfirm(confMsg)
      if (confRsp==false) { 
         dsShowFormHideMessage()
         return false 
         }
      }
   
   var svGlobal = flgGlobal
   flgGlobal = 1
   GlobalMsg=''

   if (xlValidateForm(dsForm)==false) { 
   dsShowFormHideMessage()
   return false
   }

   window.status='Validating Fields: '+statusBar(1,13)
   strValidate(BC1.BC102,"^O[A-Za-z]{1}\\d{3}$")
   window.status='Validating Fields: '+statusBar(2,13)
   strValidate(BC1.BC103,"^\\w{5}$")
   window.status='Validating Fields: '+statusBar(3,13)
   dateValidate(BC1.BC104,"","")
   window.status='Validating Fields: '+statusBar(4,13)
   strValidate(BC1.BC109as,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(5,13)
   strValidate(BC1.BC109bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(6,13)
   strValidate(BC1.BC109cs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(7,13)
   strValidate(BC1.BC109ds,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(8,13)
   strValidate(BC1.BC110as,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(9,13)
   strValidate(BC1.BC110bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(10,13)
   strValidate(BC1.BC110cs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(11,13)
   strValidate(BC1.BC110ds,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(12,13)
   strValidate(BC1.BC111bs,"^[11][0-2]\\d{4}[0][03][1239][1-5]$")
   window.status='Validating Fields: '+statusBar(13,13)
   strValidate(BC1.BC112,"^[A-Za-z]{1}\\d{2}$")



flgGlobal = svGlobal
if (GlobalMsg != '') { 
   dsShowFormHideMessage()
   confRsp=dsConfirm(GlobalMsg+NewLine+'1 or More Entries May Not Be Valid!'+NewLine+'Submit This Form Anyway?')
   if (confRsp==false) { return false } 
   confRsp=dsConfirm('Please confirm that you want to submit this form with possible errors.')
   if (confRsp==false) { return false }
   }

// 13-apr-2010 make sure no items marked missing also have values
if (AllowMissing==1) {
  for (var i=1; i<=dsForm.length; i++) { 
     var f=dsForm.elements[i-1]
     if (IsMissing(f)) { if (!IsFieldBlankNotMissing(f) && !IsDateField(f.name)) { alert("Item "+f.dsID2+" marked missing but has a value."); dsShowFormHideMessage(); return false } }
     }
  }

if (formAborted) { 
   alert("Form submission has been cancelled!")
   return false
   }
  
// following block added 10Oct01 for new checkbox handling   
   if (PassNumber==PassCount) {
      window.status = "Fixing checkbox fields..."
      for (var i=0; i<dsForm.length; i++) {
         if (checkboxField(dsForm.elements[i])) {
            if (dsForm.elements[i].checked==true)
               { dsForm.elements[i].value="Y" }
            else 
               { dsForm.elements[i].value="N" }
            dsForm.elements[i].checked=true
            }
         }
      }
if (PassNumber<PassCount) { 
   var tmpdsPass1=""
   var storeField=0
   for (var i=0; i<dsForm.length; i++) {
      storeField=0
      window.status = "Setting Pass 1 Values: "+statusBar(i,dsForm.length)
      dsForm.elements[i].pass1value=getFieldValue(dsForm.elements[i],0)
      
      goodfield(dsForm.elements[i])
      }
   
   dsShowFormHideMessage()
   resetFlag=true
   dsForm.reset()

   // restore values to items with NoDDE set; only works for text-area and text fields
   for (var i=0; i<dsForm.length; i++) { if (dsForm.elements[i].NoDDE==1) { dsForm.elements[i].value=dsForm.elements[i].pass1value } }

   if (AllowMissing==1) { MarkAllMissing(dsForm) }
   resetFlag=false
   
   PassNumber=PassNumber+1
   dsInfoSpanVar=null
   dsStatus("")
   window.scroll(0,0)
   defaultFocus()

   
   document.getElementById("FormNotes").value=document.getElementById("FormNotes").pass1value
   
   
   return false
   }
else {
   // added final hook support [15may10]
   if (typeof dsSubmitHook == 'function') { if (!dsSubmitHook()) { dsShowFormHideMessage(); return false } }
   if (AllowMissing==1) { ff("dsMissing").value=getMissing() }  // set hidden element dsMissing to hold names of field marked 'missing'
   dsForm.elements[submitField].value=submitField
   // break out of frames, if present
   if (top != self) { parent.document.getElementById("dsFrameSet").rows="*" }

   // clear the window and write a message about form submitted
   dsHideFormShowMessage(dsSubmittedMsg)
   window.status="About to submit form ("+dsForm.action+" / "+location.href+")"
   dsForm.submit()
   window.status="Form has been submitted...."
   return true
   }
}
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function elapTime(startTime) {
  var curDate = new Date()
  var curTime = curDate.getTime()
  return curTime-startTime
  }
//------------------------------------------------------------------------

//------------------------------------------------------------------------
function setFocus() {
  var Today = new Date()
  var startTime=Today.getTime()
   }
//------------------------------------------------------------------------
   
setTimeout('setFocus()',1500)

</SCRIPT>

<script language='javascript' src='./Forms/COCOJS.jsx?32538.28'></script>
<script language='javascript' src='./Forms/COCOCoreJS.jsx?32538.28'></script>

<script language='javascript'>
//RenderJS
var xlNames    = 'BC101|BC102|BC103|BC104|BC105|BC106|BC107|BC108|BC109a|BC109as|BC109b|BC109bs|BC109c|BC109cs|BC109d|BC109ds|BC110a|BC110as|BC110b|BC110bs|BC110c|BC110cs|BC110d|BC110ds|BC111a|BC111b|BC111bs|BC112|BC113'.split('|')
var xlSkips    = []
var dbgMode    = 'false'
var xlBlankOK  = []
var xlRequired = []
var xlSkipItems = []
xlSkipItems[0]={'SkipItem':'BC108','SkipID':'8','SkipVal':'2','SkipFrom':'BC109a','SkipTo':'BC112'}
xlSkipItems[1]={'SkipItem':'BC111a','SkipID':'11a','SkipVal':'2','SkipFrom':'BC111b','SkipTo':'BC112'}

//------------------------------------------------------------------------
function processExclusives() {
  }
//------------------------------------------------------------------------


//------------------------------------------------------------------------
function processSpecs() {
  }
//------------------------------------------------------------------------

document.onkeydown=xlKeyDown
</script>
<center>(<a target='_top' href='COCOMenu.asp'>Back to Data System Menu</a>)</center>

<script language='JavaScript'>
var FormRoot  = "BC1" 
var Letters   = " abcdefghijklmnopqrstuvwxyz".split("")
var formID    = "OX180"
var formCD    = "SZENG"
var formVisit = "V1"
var currentDate= "01JUN2018"
if (FormRoot=="MC1") { alert("The MC form is extremely complex.\n\nThe DCC has done its best to check it carefully but we do ask for your patience if you encounter difficulties.\n\nThe 'Save Draft' feature may be helpful if you encounter a problem.") }
</script>

</body>
</html>
